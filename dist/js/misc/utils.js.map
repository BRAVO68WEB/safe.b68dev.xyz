{"version":3,"sources":["utils.js"],"names":["lsKeys","siBytes","page","prepareShareX","const","sharexElement","document","querySelector","values","token","albumid","album","filelength","fileLength","age","uploadAge","striptags","stripTags","headers","keys","Object","i","length","push","origin","window","location","hostname","pathname","replace","originClean","sharexFile","join","sharexBlob","Blob","type","setAttribute","URL","createObjectURL","getPrettyDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getPrettyBytes","num","isFinite","si","localStorage","neg","scale","exponent","Math","min","floor","log","LOG10E","Number","pow","toPrecision","charAt","escape","string","str","String","match","exec","let","html","index","lastIndex","charCodeAt","substring"],"mappings":"AAGAA,OAAOC,QAAU,UAEjBC,KAAKC,cAAa,WAChBC,IAAMC,EAAgBC,SAASC,cAAc,WAC7C,GAAKF,EAAL,CAEAD,IAAMI,EAASN,KAAKO,MAAQ,CAC1BA,MAAOP,KAAKO,OAAS,GACrBC,QAASR,KAAKS,OAAS,IACrB,GACJH,EAAOI,WAAaV,KAAKW,YAAc,GACvCL,EAAOM,IAAMZ,KAAKa,WAAa,GAC/BP,EAAOQ,UAAYd,KAAKe,WAAa,GAIrC,IAFAb,IAAMc,EAAU,GACVC,EAAOC,OAAOD,KAAKX,GAChBa,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAE/BH,EAAQK,KAAK,QAAQJ,EAAKE,GAAE,OAAOb,EAAOW,EAAKE,IAAG,KAEpDjB,IAAMoB,GAAUC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAAUC,QAAQ,kBAAmB,IAC1FC,EAAcN,EAAOK,QAAQ,MAAO,KAEpCE,EAAa,iBACRD,EAAW,yGAGLL,OAAOC,SAAS,SAAQ,KAAKF,EAAM,kCAEpDN,EAAQc,KAAK,OAAM,oJAQbC,EAAa,IAAIC,KAAK,CAACH,GAAa,CAAEI,KAAM,6BAElD9B,EAAc+B,aAAa,OAAQC,IAAIC,gBAAgBL,IACvD5B,EAAc+B,aAAa,WAAeN,EAAW,WAGvD5B,KAAKqC,cAAa,SAAGC,GACnB,OAAOA,EAAKC,cAAgB,KACzBD,EAAKE,WAAa,EAAI,IAAM,KAC5BF,EAAKE,WAAa,GAAK,KACvBF,EAAKG,UAAY,GAAK,IAAM,IAC7BH,EAAKG,UAAY,KAChBH,EAAKI,WAAa,GAAK,IAAM,IAC9BJ,EAAKI,WAAa,KACjBJ,EAAKK,aAAe,GAAK,IAAM,IAChCL,EAAKK,aAAe,KACnBL,EAAKM,aAAe,GAAK,IAAM,IAChCN,EAAKM,cAGT5C,KAAK6C,eAAc,SAAGC,GAGpB,GAAmB,iBAARA,IAAqBC,SAASD,GAAM,OAAOA,EAEtD5C,IAAM8C,EAAsC,MAAjCC,aAAanD,OAAOC,SACzBmD,EAAMJ,EAAM,EAAI,IAAM,GACtBK,EAAQH,EAAK,IAAO,KAE1B,GADIE,IAAKJ,GAAOA,GACZA,EAAMK,EAAO,MAAO,GAAGD,EAAMJ,EAAG,KAEpC5C,IAAMkD,EAAWC,KAAKC,IAAID,KAAKE,MAAOF,KAAKG,IAAIV,GAAOO,KAAKI,OAAU,GAAI,GAGzE,MAAO,GAAGP,EAFKQ,QAAQZ,EAAMO,KAAKM,IAAIR,EAAOC,IAAWQ,YAAY,IAE9C,MADTZ,EAAK,WAAa,YAAYa,OAAOT,EAAW,IAAMJ,EAAK,GAAK,MAChD,KAG/BhD,KAAK8D,OAAM,SAAGC,GAMZ,IAAKA,EACH,OAAOA,EAET7D,IAMI4D,EANEE,EAAMC,OAAOF,GACbG,EAAQ,UAAUC,KAAKH,GAE7B,IAAKE,EACH,OAAOF,EAGTI,IAAIC,EAAO,GACPC,EAAQ,EACRC,EAAY,EAEhB,IAAKD,EAAQJ,EAAMI,MAAOA,EAAQN,EAAI5C,OAAQkD,IAAS,CACrD,OAAQN,EAAIQ,WAAWF,IACrB,KAAK,GACHR,EAAS,SACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,QACE,SAGAS,IAAcD,IAChBD,GAAQL,EAAIS,UAAUF,EAAWD,IAEnCC,EAAYD,EAAQ,EACpBD,GAAQP,EAGV,OAAOS,IAAcD,EACjBD,EAAOL,EAAIS,UAAUF,EAAWD,GAChCD","file":"utils.js","sourcesContent":["/* global lsKeys, page */\n\n// keys for localStorage\nlsKeys.siBytes = 'siBytes'\n\npage.prepareShareX = () => {\n  const sharexElement = document.querySelector('#ShareX')\n  if (!sharexElement) return\n\n  const values = page.token ? {\n    token: page.token || '',\n    albumid: page.album || ''\n  } : {}\n  values.filelength = page.fileLength || ''\n  values.age = page.uploadAge || ''\n  values.striptags = page.stripTags || ''\n\n  const headers = []\n  const keys = Object.keys(values)\n  for (let i = 0; i < keys.length; i++)\n    // Pad by 4 space\n    headers.push(`    \"${keys[i]}\": \"${values[keys[i]]}\"`)\n\n  const origin = (window.location.hostname + window.location.pathname).replace(/\\/(dashboard)?$/, '')\n  const originClean = origin.replace(/\\//g, '_')\n\n  const sharexFile = `{\n  \"Name\": \"${originClean}\",\n  \"DestinationType\": \"ImageUploader, FileUploader\",\n  \"RequestMethod\": \"POST\",\n  \"RequestURL\": \"${window.location.protocol}//${origin}/api/upload\",\n  \"Headers\": {\n${headers.join(',\\n')}\n  },\n  \"Body\": \"MultipartFormData\",\n  \"FileFormName\": \"files[]\",\n  \"URL\": \"$json:files[0].url$\",\n  \"ThumbnailURL\": \"$json:files[0].url$\"\n}`\n\n  const sharexBlob = new Blob([sharexFile], { type: 'application/octet-binary' })\n  /* eslint-disable-next-line compat/compat */\n  sharexElement.setAttribute('href', URL.createObjectURL(sharexBlob))\n  sharexElement.setAttribute('download', `${originClean}.sxcu`)\n}\n\npage.getPrettyDate = date => {\n  return date.getFullYear() + '/' +\n    (date.getMonth() < 9 ? '0' : '') + // month's index starts from zero\n    (date.getMonth() + 1) + '/' +\n    (date.getDate() < 10 ? '0' : '') +\n    date.getDate() + ' ' +\n    (date.getHours() < 10 ? '0' : '') +\n    date.getHours() + ':' +\n    (date.getMinutes() < 10 ? '0' : '') +\n    date.getMinutes() + ':' +\n    (date.getSeconds() < 10 ? '0' : '') +\n    date.getSeconds()\n}\n\npage.getPrettyBytes = num => {\n  // MIT License\n  // Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n  if (typeof num !== 'number' && !isFinite(num)) return num\n\n  const si = localStorage[lsKeys.siBytes] !== '0'\n  const neg = num < 0 ? '-' : ''\n  const scale = si ? 1000 : 1024\n  if (neg) num = -num\n  if (num < scale) return `${neg}${num} B`\n\n  const exponent = Math.min(Math.floor((Math.log(num) * Math.LOG10E) / 3), 8) // 8 is count of KMGTPEZY\n  const numStr = Number((num / Math.pow(scale, exponent)).toPrecision(3))\n  const pre = (si ? 'kMGTPEZY' : 'KMGTPEZY').charAt(exponent - 1) + (si ? '' : 'i')\n  return `${neg}${numStr} ${pre}B`\n}\n\npage.escape = string => {\n  // MIT License\n  // Copyright(c) 2012-2013 TJ Holowaychuk\n  // Copyright(c) 2015 Andreas Lubbe\n  // Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n\n  if (!string)\n    return string\n\n  const str = String(string)\n  const match = /[\"'&<>]/.exec(str)\n\n  if (!match)\n    return str\n\n  let escape\n  let html = ''\n  let index = 0\n  let lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;'\n        break\n      case 38: // &\n        escape = '&amp;'\n        break\n      case 39: // '\n        escape = '&#39;'\n        break\n      case 60: // <\n        escape = '&lt;'\n        break\n      case 62: // >\n        escape = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    if (lastIndex !== index)\n      html += str.substring(lastIndex, index)\n\n    lastIndex = index + 1\n    html += escape\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html\n}\n"]}