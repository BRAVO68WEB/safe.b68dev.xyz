{"version":3,"sources":["home.js"],"names":["const","lsKeys","token","chunkSize","parallelUploads","uploadsHistoryOrder","previewImages","fileLength","uploadAge","stripTags","page","localStorage","private","enableUserAccounts","maxSize","temporaryUploadAges","fileIdentifierLength","stripTagsConfig","album","maxSizeBytes","urlMaxSize","urlMaxSizeBytes","tabs","activeTab","albumSelect","albumSelectOnChange","previewTemplate","dropzone","clipboardJS","lazyLoad","urlsQueue","activeUrlsQueue","imageExts","videoExts","albumTitleMaxLength","albumDescMaxLength","onInitError","error","document","querySelector","classList","add","querySelectorAll","forEach","element","uploadButton","innerText","remove","addEventListener","window","location","reload","response","onAxiosError","onError","console","content","createElement","innerHTML","toString","swal","title","icon","statusText","520","521","522","523","524","525","526","527","530","status","description","data","checkClientVersion","apiVersion","match","src","text","buttons","confirm","closeModal","then","checkIfPublic","let","renderShown","axios","get","onDownloadProgress","doRender","version","parseInt","preparePage","catch","prepareUpload","verifyToken","button","href","reloadOnError","post","success","removeItem","authLink","setAttribute","value","prepareShareX","fetchAlbums","prepareUploadConfig","getPrettyBytes","prepareDropzone","event","addUrlsToQueue","tabsContainer","loop","i","id","dataset","tabContent","setActiveTab","push","tab","length","index","headers","Array","isArray","albums","option","name","appendChild","previewNode","parentNode","removeChild","tabDiv","div","className","previewsContainer","Dropzone","body","url","paramName","clickable","maxFilesize","uploadMultiple","createImageThumbnails","autoProcessQueue","chunking","Boolean","parallelChunkUploads","timeout","init","this","on","file","previewElement","xhr","ontimeout","instances","getUploadingFiles","filter","instance","_handleUploadError","undefined","_uplSpeedCalc","lastSent","timestamp","Date","now","bytes","upload","chunked","setRequestHeader","chunks","progress","prettyBytesPerSec","total","Math","max","size","percentage","bytesSent","toFixed","upl","prefix","skipProgress","done","last","totalChunkCount","chunkIndex","elapsed","bytesPerSec","fullSec","splice","excessDuration","duration","files","updateTemplate","test","updateTemplateIcon","chunksUploaded","uuid","original","type","albumid","filelength","age","striptags","urls","split","trim","firstChild","processUrlsQueue","shiftQueue","initUrlUpload","finishedUrlUpload","shift","templateElement","iconClass","iconElement","link","a","clipboard","clipboardText","parentElement","exec","extname","toLowerCase","includes","img","onerror","currentTarget","update","expirydate","expiryDate","getPrettyDate","createAlbum","cancel","download","checked","public","selected","fallback","min","config","siBytes","label","select","help","valueHandler","display","number","round","disabled","force","default","video","isNaN","suffix","uploadFields","stored","parseFloat","String","getPrettyUploadAge","form","preventDefault","configKeys","Object","keys","key","conf","field","parsed","find","sel","control","opts","j","opt","join","tmp","submit","checkValidity","elements","hours","minutes","days","items","clipboardData","originalEvent","item","kind","blob","getAsFile","File","addFile","onload","cookieconsent","initialise","cookie","expiryDays","secure","palette","popup","background","theme","position","message","dismiss","ClipboardJS","timer","LazyLoad","elements_selector"],"mappings":"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","file":"home.js","sourcesContent":["/* global swal, axios, Dropzone, ClipboardJS, LazyLoad */\n\nconst lsKeys = {\n  token: 'token',\n  chunkSize: 'chunkSize',\n  parallelUploads: 'parallelUploads',\n  uploadsHistoryOrder: 'uploadsHistoryOrder',\n  previewImages: 'previewImages',\n  fileLength: 'fileLength',\n  uploadAge: 'uploadAge',\n  stripTags: 'stripTags'\n}\n\nconst page = {\n  // user token\n  token: localStorage[lsKeys.token],\n\n  // configs from api/check\n  private: null,\n  enableUserAccounts: null,\n  maxSize: null,\n  chunkSize: null,\n  temporaryUploadAges: null,\n  fileIdentifierLength: null,\n  stripTagsConfig: null,\n\n  // store album id that will be used with upload requests\n  album: null,\n\n  parallelUploads: 2,\n  previewImages: null,\n  fileLength: null,\n  uploadAge: null,\n\n  maxSizeBytes: null,\n  urlMaxSize: null,\n  urlMaxSizeBytes: null,\n\n  tabs: [],\n  activeTab: null,\n  albumSelect: null,\n  albumSelectOnChange: null,\n  previewTemplate: null,\n\n  dropzone: null,\n  clipboardJS: null,\n  lazyLoad: null,\n\n  // additional vars for url uploads\n  urlsQueue: [],\n  activeUrlsQueue: 0,\n\n  // Include BMP for uploads preview only, cause the real images will be used\n  // Sharp isn't capable of making their thumbnails for dashboard and album public pages\n  imageExts: ['.webp', '.jpg', '.jpeg', '.bmp', '.gif', '.png', '.tiff', '.tif', '.svg'],\n  videoExts: ['.webm', '.mp4', '.wmv', '.avi', '.mov', '.mkv', '.m4v', '.m2ts'],\n\n  albumTitleMaxLength: 70,\n  albumDescMaxLength: 4000\n}\n\n// Handler for errors during initialization\npage.onInitError = error => {\n  // Hide these elements\n  document.querySelector('#albumDiv').classList.add('is-hidden')\n  document.querySelector('#tabs').classList.add('is-hidden')\n  document.querySelectorAll('.tab-content').forEach(element => {\n    return element.classList.add('is-hidden')\n  })\n\n  // Update upload button\n  const uploadButton = document.querySelector('#loginToUpload')\n  uploadButton.innerText = 'An error occurred. Try to reload?'\n  uploadButton.classList.remove('is-loading')\n  uploadButton.classList.remove('is-hidden')\n\n  uploadButton.addEventListener('click', () => {\n    window.location.reload()\n  })\n\n  if (error.response)\n    page.onAxiosError(error)\n  else\n    page.onError(error)\n}\n\n// Handler for regular JS errors\npage.onError = error => {\n  console.error(error)\n\n  const content = document.createElement('div')\n  content.innerHTML = `<code>${error.toString()}</code>`\n  return swal({\n    title: 'An error occurred!',\n    icon: 'error',\n    content\n  })\n}\n\n// Handler for Axios errors\npage.onAxiosError = error => {\n  console.error(error)\n\n  // Better Cloudflare errors\n  const cloudflareErrors = {\n    520: 'Unknown Error',\n    521: 'Web Server Is Down',\n    522: 'Connection Timed Out',\n    523: 'Origin Is Unreachable',\n    524: 'A Timeout Occurred',\n    525: 'SSL Handshake Failed',\n    526: 'Invalid SSL Certificate',\n    527: 'Railgun Error',\n    530: 'Origin DNS Error'\n  }\n\n  const statusText = cloudflareErrors[error.response.status] || error.response.statusText\n  const description = error.response.data && error.response.data.description\n    ? error.response.data.description\n    : 'There was an error with the request, please check the console for more information.'\n\n  return swal(`${error.response.status} ${statusText}`, description, 'error')\n}\n\npage.checkClientVersion = apiVersion => {\n  const self = document.querySelector('#mainScript')\n  const match = self.src.match(/\\?_=(\\d+)$/)\n  if (match && match[1] && match[1] !== apiVersion)\n    return swal({\n      title: 'Updated detected!',\n      text: 'Client assets have been updated. Reload to display the latest version?',\n      icon: 'info',\n      buttons: {\n        confirm: {\n          text: 'Reload',\n          closeModal: false\n        }\n      }\n    }).then(() => {\n      window.location.reload()\n    })\n}\n\npage.checkIfPublic = () => {\n  let renderShown = false\n  return axios.get('api/check', {\n    onDownloadProgress: () => {\n      // Only show render after this request has been initiated to avoid blocking\n      if (!renderShown && typeof page.doRender === 'function') {\n        page.doRender()\n        renderShown = true\n      }\n    }\n  }).then(response => {\n    if (response.data.version)\n      page.checkClientVersion(response.data.version)\n\n    page.private = response.data.private\n    page.enableUserAccounts = response.data.enableUserAccounts\n    page.maxSize = parseInt(response.data.maxSize)\n    page.maxSizeBytes = page.maxSize * 1e6\n    page.chunkSize = parseInt(response.data.chunkSize)\n    page.temporaryUploadAges = response.data.temporaryUploadAges\n    page.fileIdentifierLength = response.data.fileIdentifierLength\n    page.stripTagsConfig = response.data.stripTags\n\n    return page.preparePage()\n  }).catch(page.onInitError)\n}\n\npage.preparePage = () => {\n  if (page.private)\n    if (page.token) {\n      return page.verifyToken(page.token, true)\n    } else {\n      const button = document.querySelector('#loginToUpload')\n      button.href = 'auth'\n      button.classList.remove('is-loading')\n      if (page.enableUserAccounts)\n        button.innerText = 'Anonymous upload is disabled. Log in to upload.'\n      else\n        button.innerText = 'Running in private mode. Log in to upload.'\n    }\n  else\n    return page.prepareUpload()\n}\n\npage.verifyToken = (token, reloadOnError) => {\n  return axios.post('api/tokens/verify', { token }).then(response => {\n    if (response.data.success === false)\n      return swal({\n        title: 'An error occurred!',\n        text: response.data.description,\n        icon: 'error'\n      }).then(() => {\n        if (!reloadOnError) return\n        localStorage.removeItem('token')\n        window.location.reload()\n      })\n\n    localStorage[lsKeys.token] = token\n    page.token = token\n    return page.prepareUpload()\n  }).catch(page.onInitError)\n}\n\npage.prepareUpload = () => {\n  // I think this fits best here because we need to check for a valid token before we can get the albums\n  if (page.token) {\n    // Change /auth link to /dashboard\n    const authLink = document.querySelector('#linksColumn a[href=\"auth\"]')\n    if (authLink)\n      authLink.setAttribute('href', 'dashboard')\n\n    // Display the album selection\n    document.querySelector('#albumDiv').classList.remove('is-hidden')\n\n    page.albumSelect = document.querySelector('#albumSelect')\n    page.albumSelectOnChange = () => {\n      page.album = parseInt(page.albumSelect.value)\n      // Re-generate ShareX config file\n      if (typeof page.prepareShareX === 'function')\n        page.prepareShareX()\n    }\n    page.albumSelect.addEventListener('change', page.albumSelectOnChange)\n\n    // Fetch albums\n    page.fetchAlbums()\n  } else if (page.enableUserAccounts) {\n    document.querySelector('#loginLinkText').innerHTML = 'Create an account and keep track of your uploads'\n  }\n\n  // Prepare & generate config tab\n  page.prepareUploadConfig()\n\n  // Update elements wherever applicable\n  document.querySelector('#maxSize > span').innerHTML = page.getPrettyBytes(page.maxSizeBytes)\n  document.querySelector('#loginToUpload').classList.add('is-hidden')\n\n  // Prepare & generate files upload tab\n  page.prepareDropzone()\n\n  // Generate ShareX config file\n  if (typeof page.prepareShareX === 'function')\n    page.prepareShareX()\n\n  // Prepare urls upload tab\n  const urlMaxSize = document.querySelector('#urlMaxSize')\n  if (urlMaxSize) {\n    page.urlMaxSize = parseInt(urlMaxSize.innerHTML)\n    page.urlMaxSizeBytes = page.urlMaxSize * 1e6\n    urlMaxSize.innerHTML = page.getPrettyBytes(page.urlMaxSizeBytes)\n    document.querySelector('#uploadUrls').addEventListener('click', event => {\n      page.addUrlsToQueue()\n    })\n  }\n\n  // Get all tabs\n  const tabsContainer = document.querySelector('#tabs')\n  const tabs = tabsContainer.querySelectorAll('li')\n  for (let i = 0; i < tabs.length; i++) {\n    const id = tabs[i].dataset.id\n    const tabContent = document.querySelector(`#${id}`)\n    if (!tabContent) continue\n\n    tabs[i].addEventListener('click', () => {\n      page.setActiveTab(i)\n    })\n    page.tabs.push({ tab: tabs[i], content: tabContent })\n  }\n\n  // Set first valid tab as the default active tab\n  if (page.tabs.length) {\n    page.setActiveTab(0)\n    tabsContainer.classList.remove('is-hidden')\n  }\n}\n\npage.setActiveTab = index => {\n  for (let i = 0; i < page.tabs.length; i++)\n    if (i === index) {\n      page.tabs[i].tab.classList.add('is-active')\n      page.tabs[i].content.classList.remove('is-hidden')\n      page.activeTab = index\n    } else {\n      page.tabs[i].tab.classList.remove('is-active')\n      page.tabs[i].content.classList.add('is-hidden')\n    }\n}\n\npage.fetchAlbums = () => {\n  return axios.get('api/albums', { headers: { token: page.token } }).then(response => {\n    if (response.data.success === false)\n      return swal('An error occurred!', response.data.description, 'error')\n\n    // Create an option for each album\n    if (Array.isArray(response.data.albums) && response.data.albums.length)\n      for (let i = 0; i < response.data.albums.length; i++) {\n        const album = response.data.albums[i]\n        const option = document.createElement('option')\n        option.value = album.id\n        option.innerHTML = album.name\n        page.albumSelect.appendChild(option)\n      }\n  }).catch(page.onInitError)\n}\n\npage.prepareDropzone = () => {\n  // Parse template element\n  const previewNode = document.querySelector('#tpl')\n  page.previewTemplate = previewNode.innerHTML\n  previewNode.parentNode.removeChild(previewNode)\n\n  // Generate files upload tab\n  const tabDiv = document.querySelector('#tab-files')\n  const div = document.createElement('div')\n  div.className = 'control is-expanded'\n  div.innerHTML = `\n    <div id=\"dropzone\" class=\"button is-danger is-outlined is-fullwidth is-unselectable\">\n      <span class=\"icon\">\n        <i class=\"icon-upload-cloud\"></i>\n      </span>\n      <span>Click here or drag & drop files</span>\n    </div>\n  `\n  tabDiv.querySelector('.dz-container').appendChild(div)\n\n  const previewsContainer = tabDiv.querySelector('#tab-files .field.uploads')\n\n  page.dropzone = new Dropzone(document.body, {\n    url: 'api/upload',\n    paramName: 'files[]',\n    clickable: tabDiv.querySelector('#dropzone'),\n    maxFilesize: page.maxSizeBytes / 1024 / 1024, // this option expects MiB\n    parallelUploads: page.parallelUploads,\n    uploadMultiple: false,\n    previewsContainer,\n    previewTemplate: page.previewTemplate,\n    createImageThumbnails: false,\n    autoProcessQueue: true,\n    headers: { token: page.token },\n    chunking: Boolean(page.chunkSize),\n    chunkSize: page.chunkSize * 1e6, // this option expects Bytes\n    parallelChunkUploads: false, // for now, enabling this breaks descriptive upload progress\n    timeout: 0,\n\n    init () {\n      this.on('addedfile', file => {\n        // Set active tab to file uploads, if necessary\n        if (page.activeTab !== 0)\n          page.setActiveTab(0)\n\n        // Add file entry\n        tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n\n        file.previewElement.querySelector('.name').innerHTML = file.name\n        file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\n      })\n\n      this.on('sending', (file, xhr) => {\n        // Add timeout listener (hacky method due to lack of built-in timeout handler)\n        if (!xhr.ontimeout)\n          xhr.ontimeout = () => {\n            const instances = page.dropzone.getUploadingFiles()\n              .filter(instance => instance.xhr === xhr)\n            page.dropzone._handleUploadError(instances, xhr, 'Connection timed out. Try to reduce upload chunk size.')\n          }\n\n        // Attach necessary data for initial upload speed calculation\n        if (xhr._uplSpeedCalc === undefined)\n          xhr._uplSpeedCalc = {\n            lastSent: 0,\n            data: [{ timestamp: Date.now(), bytes: 0 }]\n          }\n\n        // If not chunked uploads, add extra headers\n        if (!file.upload.chunked) {\n          if (page.album !== null) xhr.setRequestHeader('albumid', page.album)\n          if (page.fileLength !== null) xhr.setRequestHeader('filelength', page.fileLength)\n          if (page.uploadAge !== null) xhr.setRequestHeader('age', page.uploadAge)\n          if (page.stripTags !== null) xhr.setRequestHeader('striptags', page.stripTags)\n        }\n\n        if (!file.upload.chunked)\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Uploading\\u2026'\n        else if (file.upload.chunks.length === 1)\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = `Uploading chunk 1/${file.upload.totalChunkCount}\\u2026`\n      })\n\n      // Update descriptive progress\n      this.on('uploadprogress', (file, progress) => {\n        // Total bytes will eventually be bigger than file size when chunked\n        const total = Math.max(file.size, file.upload.total)\n        const percentage = (file.upload.bytesSent / total * 100).toFixed(0)\n\n        const upl = file.upload.chunked\n          ? file.upload.chunks[file.upload.chunks.length - 1]\n          : file.upload\n        const xhr = upl.xhr || file.xhr\n\n        let prefix = 'Uploading\\u2026'\n        let skipProgress = false\n        if (file.upload.chunked) {\n          const done = upl.bytesSent === upl.total\n          const last = file.upload.chunks.length === file.upload.totalChunkCount\n          let chunkIndex = file.upload.chunks.length\n          if (done && !last) {\n            chunkIndex++\n            skipProgress = true\n          }\n          prefix = `Uploading chunk ${chunkIndex}/${file.upload.totalChunkCount}\\u2026`\n        }\n\n        // Real-time upload speed calculation\n        let prettyBytesPerSec\n        if (!skipProgress) {\n          const now = Date.now()\n          const bytesSent = upl.bytesSent - xhr._uplSpeedCalc.lastSent\n\n          // Push data of current iteration\n          xhr._uplSpeedCalc.lastSent = upl.bytesSent\n          xhr._uplSpeedCalc.data.push({ timestamp: now, bytes: bytesSent })\n\n          // Wait till at least the 2nd iteration (3 data including initial data)\n          const length = xhr._uplSpeedCalc.data.length\n          if (length > 2) {\n            // Calculate using data from all iterations\n            let elapsed = 0\n            let bytesPerSec = 0\n            let fullSec = false\n            let i = length - 1 // Always start with 2nd from last item\n            while (i--) {\n              // Splice data of unrequired iterations\n              if (fullSec) {\n                xhr._uplSpeedCalc.data.splice(i, 1)\n                continue\n              }\n              // Sum data\n              elapsed = now - xhr._uplSpeedCalc.data[i].timestamp\n              if (elapsed > 1000) {\n                const excessDuration = elapsed - 1000\n                const newerIterationElapsed = now - xhr._uplSpeedCalc.data[i + 1].timestamp\n                const duration = elapsed - newerIterationElapsed\n                const fragment = (duration - excessDuration) / duration * xhr._uplSpeedCalc.data[i + 1].bytes\n                bytesPerSec += fragment\n                fullSec = true\n              } else {\n                bytesPerSec += xhr._uplSpeedCalc.data[i + 1].bytes\n              }\n            }\n\n            // If not enough data\n            if (!fullSec)\n              bytesPerSec = 1000 / elapsed * bytesPerSec\n\n            // Get pretty bytes\n            prettyBytesPerSec = page.getPrettyBytes(bytesPerSec)\n          }\n        }\n\n        file.previewElement.querySelector('.descriptive-progress').innerHTML =\n          `${prefix} ${percentage}%${prettyBytesPerSec ? ` at ${prettyBytesPerSec}/s` : ''}`\n      })\n\n      this.on('success', (file, data) => {\n        if (!data) return\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        if (data.success === false) {\n          file.previewElement.querySelector('.error').innerHTML = data.description\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\n        }\n\n        if (Array.isArray(data.files) && data.files[0])\n          page.updateTemplate(file, data.files[0])\n      })\n\n      this.on('error', (file, error) => {\n        // Clean up file size errors\n        if ((typeof error === 'string' && /^File is too big/.test(error)) ||\n          (typeof error === 'object' && /File too large/.test(error.description)))\n          error = `File too large (${page.getPrettyBytes(file.size)}).`\n\n        page.updateTemplateIcon(file.previewElement, 'icon-block')\n\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        file.previewElement.querySelector('.error').innerHTML = error.description || error\n        file.previewElement.querySelector('.error').classList.remove('is-hidden')\n      })\n    },\n\n    chunksUploaded (file, done) {\n      file.previewElement.querySelector('.descriptive-progress').innerHTML =\n        `Rebuilding ${file.upload.totalChunkCount} chunks\\u2026`\n\n      return axios.post('api/upload/finishchunks', {\n        // This API supports an array of multiple files\n        files: [{\n          uuid: file.upload.uuid,\n          original: file.name,\n          type: file.type,\n          albumid: page.album,\n          filelength: page.fileLength,\n          age: page.uploadAge\n        }]\n      }, {\n        headers: {\n          token: page.token,\n          // Unlike the options above (e.g. albumid, filelength, etc.),\n          // strip tags cannot yet be configured per file with this API\n          striptags: page.stripTags\n        }\n      }).catch(error => {\n        // Format error for display purpose\n        return error.response.data ? error.response : {\n          data: {\n            success: false,\n            description: error.toString()\n          }\n        }\n      }).then(response => {\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        if (response.data.success === false) {\n          file.previewElement.querySelector('.error').innerHTML = response.data.description\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\n        }\n\n        if (response.data.files && response.data.files[0])\n          page.updateTemplate(file, response.data.files[0])\n\n        return done()\n      })\n    }\n  })\n}\n\npage.addUrlsToQueue = () => {\n  const urls = document.querySelector('#urls').value\n    .split(/\\r?\\n/)\n    .filter(url => {\n      return url.trim().length\n    })\n\n  if (!urls.length)\n    return swal('An error occurred!', 'You have not entered any URLs.', 'error')\n\n  const tabDiv = document.querySelector('#tab-urls')\n  tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n\n  for (let i = 0; i < urls.length; i++) {\n    const previewTemplate = document.createElement('template')\n    previewTemplate.innerHTML = page.previewTemplate.trim()\n\n    const previewElement = previewTemplate.content.firstChild\n    previewElement.querySelector('.name').innerHTML = urls[i]\n    previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\n\n    const previewsContainer = tabDiv.querySelector('.uploads')\n    previewsContainer.appendChild(previewElement)\n\n    page.urlsQueue.push({\n      url: urls[i],\n      previewElement\n    })\n  }\n\n  page.processUrlsQueue()\n  document.querySelector('#urls').value = ''\n}\n\npage.processUrlsQueue = () => {\n  if (!page.urlsQueue.length) return\n\n  function finishedUrlUpload (file, data) {\n    file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n    if (data.success === false) {\n      const match = data.description.match(/ over limit: (\\d+)$/)\n      if (match && match[1])\n        data.description = `File exceeded limit of ${page.getPrettyBytes(match[1])}.`\n\n      file.previewElement.querySelector('.error').innerHTML = data.description\n      file.previewElement.querySelector('.error').classList.remove('is-hidden')\n    }\n\n    if (Array.isArray(data.files) && data.files[0])\n      page.updateTemplate(file, data.files[0])\n\n    page.activeUrlsQueue--\n    return shiftQueue()\n  }\n\n  function initUrlUpload (file) {\n    file.previewElement.querySelector('.descriptive-progress').innerHTML =\n      'Waiting for server to fetch URL\\u2026'\n\n    return axios.post('api/upload', {\n      urls: [file.url]\n    }, {\n      headers: {\n        token: page.token,\n        albumid: page.album,\n        age: page.uploadAge,\n        filelength: page.fileLength\n      }\n    }).catch(error => {\n      // Format error for display purpose\n      return error.response.data ? error.response : {\n        data: {\n          success: false,\n          description: error.toString()\n        }\n      }\n    }).then(response => {\n      return finishedUrlUpload(file, response.data)\n    })\n  }\n\n  function shiftQueue () {\n    while (page.urlsQueue.length && (page.activeUrlsQueue < page.parallelUploads)) {\n      page.activeUrlsQueue++\n      initUrlUpload(page.urlsQueue.shift())\n    }\n  }\n\n  return shiftQueue()\n}\n\npage.updateTemplateIcon = (templateElement, iconClass) => {\n  const iconElement = templateElement.querySelector('.icon')\n  if (!iconElement) return\n\n  iconElement.classList.add(iconClass)\n  iconElement.classList.remove('is-hidden')\n}\n\npage.updateTemplate = (file, response) => {\n  if (!response.url) return\n\n  const link = file.previewElement.querySelector('.link')\n  const a = link.querySelector('a')\n  const clipboard = file.previewElement.querySelector('.clipboard-mobile > .clipboard-js')\n  a.href = a.innerHTML = clipboard.dataset.clipboardText = response.url\n\n  link.classList.remove('is-hidden')\n  clipboard.parentElement.classList.remove('is-hidden')\n\n  const exec = /.[\\w]+(\\?|$)/.exec(response.url)\n  const extname = exec && exec[0]\n    ? exec[0].toLowerCase()\n    : null\n\n  if (page.imageExts.includes(extname))\n    if (page.previewImages) {\n      const img = file.previewElement.querySelector('img')\n      img.setAttribute('alt', response.name || '')\n      img.dataset.src = response.url\n      img.classList.remove('is-hidden')\n      img.onerror = event => {\n        // Hide image elements that fail to load\n        // Consequently include WEBP in browsers that do not have WEBP support (e.g. IE)\n        event.currentTarget.classList.add('is-hidden')\n        page.updateTemplateIcon(file.previewElement, 'icon-picture')\n      }\n      page.lazyLoad.update(file.previewElement.querySelectorAll('img'))\n    } else {\n      page.updateTemplateIcon(file.previewElement, 'icon-picture')\n    }\n  else if (page.videoExts.includes(extname))\n    page.updateTemplateIcon(file.previewElement, 'icon-video')\n  else\n    page.updateTemplateIcon(file.previewElement, 'icon-doc-inv')\n\n  if (response.expirydate) {\n    const expiryDate = file.previewElement.querySelector('.expiry-date')\n    expiryDate.innerHTML = `EXP: ${page.getPrettyDate(new Date(response.expirydate * 1000))}`\n    expiryDate.classList.remove('is-hidden')\n  }\n}\n\npage.createAlbum = () => {\n  const div = document.createElement('div')\n  div.innerHTML = `\n    <div class=\"field\">\n      <div class=\"controls\">\n        <input id=\"swalName\" class=\"input\" type=\"text\" placeholder=\"Name\" maxlength=\"${page.albumTitleMaxLength}\">\n      </div>\n      <p class=\"help\">Max length is ${page.albumTitleMaxLength} characters.</p>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <textarea id=\"swalDescription\" class=\"textarea\" placeholder=\"Description\" rows=\"2\" maxlength=\"${page.albumDescMaxLength}\"></textarea>\n      </div>\n      <p class=\"help\">Max length is ${page.albumDescMaxLength} characters.</p>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalDownload\" type=\"checkbox\" checked>\n          Enable download\n        </label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalPublic\" type=\"checkbox\" checked>\n          Enable public link\n        </label>\n      </div>\n    </div>\n  `\n\n  swal({\n    title: 'Create new album',\n    icon: 'info',\n    content: div,\n    buttons: {\n      cancel: true,\n      confirm: {\n        closeModal: false\n      }\n    }\n  }).then(value => {\n    if (!value) return\n\n    const name = document.querySelector('#swalName').value.trim()\n    axios.post('api/albums', {\n      name,\n      description: document.querySelector('#swalDescription').value.trim(),\n      download: document.querySelector('#swalDownload').checked,\n      public: document.querySelector('#swalPublic').checked\n    }, {\n      headers: {\n        token: page.token\n      }\n    }).then(response => {\n      if (response.data.success === false)\n        return swal('An error occurred!', response.data.description, 'error')\n\n      const option = document.createElement('option')\n      page.albumSelect.appendChild(option)\n      option.value = response.data.id\n      option.innerHTML = name\n      option.selected = true\n      page.albumSelectOnChange()\n\n      swal('Woohoo!', 'Album was created successfully.', 'success')\n    }).catch(page.onError)\n  })\n}\n\npage.prepareUploadConfig = () => {\n  const fallback = {\n    chunkSize: page.chunkSize,\n    parallelUploads: page.parallelUploads\n  }\n\n  const temporaryUploadAges = Array.isArray(page.temporaryUploadAges) && page.temporaryUploadAges.length\n  const fileIdentifierLength = page.fileIdentifierLength &&\n    typeof page.fileIdentifierLength.min === 'number' &&\n    typeof page.fileIdentifierLength.max === 'number'\n\n  const config = {\n    siBytes: {\n      label: 'File size display',\n      select: [\n        { value: 'default', text: '1000 B = 1 kB = 1 Kilobyte' },\n        { value: '0', text: '1024 B = 1 KiB = 1 Kibibyte' }\n      ],\n      help: 'This will be used in our homepage, dashboard, and album public pages.',\n      valueHandler () {} // Do nothing\n    },\n    fileLength: {\n      display: fileIdentifierLength,\n      label: 'File identifier length',\n      number: fileIdentifierLength ? {\n        min: page.fileIdentifierLength.min,\n        max: page.fileIdentifierLength.max,\n        round: true\n      } : undefined,\n      help: true, // true means auto-generated, for number-based configs only\n      disabled: fileIdentifierLength && page.fileIdentifierLength.force\n    },\n    uploadAge: {\n      display: temporaryUploadAges,\n      label: 'Upload age',\n      select: [],\n      help: 'Whether to automatically delete your uploads after a certain amount of time.'\n    },\n    stripTags: {\n      display: page.stripTagsConfig,\n      label: 'Strip tags',\n      select: page.stripTagsConfig ? [\n        { value: page.stripTagsConfig.default ? 'default' : '1', text: 'Yes' },\n        { value: page.stripTagsConfig.default ? '0' : 'default', text: 'No' }\n      ] : null,\n      help: `Whether to strip tags (e.g. EXIF) from your uploads.<br>\n        This only applies to regular image${page.stripTagsConfig && page.stripTagsConfig.video ? ' and video' : ''} uploads (i.e. not URL uploads).`,\n      disabled: page.stripTagsConfig && page.stripTagsConfig.force\n    },\n    chunkSize: {\n      display: !isNaN(page.chunkSize),\n      label: 'Upload chunk size (MB)',\n      number: {\n        min: 1,\n        max: 95,\n        suffix: ' MB',\n        round: true\n      },\n      help: true\n    },\n    parallelUploads: {\n      label: 'Parallel uploads',\n      number: {\n        min: 1,\n        max: 10,\n        round: true\n      },\n      help: true\n    },\n    uploadsHistoryOrder: {\n      label: 'Uploads history order',\n      select: [\n        { value: 'default', text: 'Older files on top' },\n        { value: '0', text: 'Newer files on top' }\n      ],\n      help: `\"Newer files on top\" will use a CSS technique, which unfortunately come with <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction#Accessibility_Concerns\" target=\"_blank\" rel=\"noopener\">some undesirable side effects</a>.<br>\n        This also affects text selection, such as when trying to select text from top to bottom will result in them being selected from bottom to top instead, and vice versa.`,\n      valueHandler (value) {\n        if (value === '0') {\n          const uploadFields = document.querySelectorAll('.tab-content > .uploads')\n          for (let i = 0; i < uploadFields.length; i++)\n            uploadFields[i].classList.add('is-reversed')\n        }\n      }\n    },\n    previewImages: {\n      label: 'Load images for preview',\n      select: [\n        { value: 'default', text: 'Yes' },\n        { value: '0', text: 'No' }\n      ],\n      help: 'By default, uploaded images will be loaded as their previews.',\n      valueHandler (value) {\n        page.previewImages = value !== '0'\n      }\n    }\n  }\n\n  if (temporaryUploadAges) {\n    const stored = parseFloat(localStorage[lsKeys.uploadAge])\n    for (let i = 0; i < page.temporaryUploadAges.length; i++) {\n      const age = page.temporaryUploadAges[i]\n      config.uploadAge.select.push({\n        value: i === 0 ? 'default' : String(age),\n        text: page.getPrettyUploadAge(age)\n      })\n      if (age === stored)\n        config.uploadAge.value = stored\n    }\n  }\n\n  if (fileIdentifierLength) {\n    fallback.fileLength = page.fileIdentifierLength.default || undefined\n    const stored = parseInt(localStorage[lsKeys.fileLength])\n    if (!page.fileIdentifierLength.force &&\n      !isNaN(stored) &&\n      stored >= page.fileIdentifierLength.min &&\n      stored <= page.fileIdentifierLength.max)\n      config.fileLength.value = stored\n  }\n\n  const tabContent = document.querySelector('#tab-config')\n  const form = document.createElement('form')\n  form.addEventListener('submit', event => event.preventDefault())\n\n  const configKeys = Object.keys(config)\n  for (let i = 0; i < configKeys.length; i++) {\n    const key = configKeys[i]\n    const conf = config[key]\n\n    // Skip only if display attribute is explicitly set to false\n    if (conf.display === false)\n      continue\n\n    const field = document.createElement('div')\n    field.className = 'field'\n\n    let value\n    if (!conf.disabled) {\n      if (conf.value !== undefined) {\n        value = conf.value\n      } else if (conf.number !== undefined) {\n        const parsed = parseInt(localStorage[lsKeys[key]])\n        if (!isNaN(parsed))\n          value = parsed\n      } else {\n        const stored = localStorage[lsKeys[key]]\n        if (Array.isArray(conf.select))\n          value = conf.select.find(sel => sel.value === stored) ? stored : undefined\n        else\n          value = stored\n      }\n\n      // If valueHandler function exists, defer to the function,\n      // otherwise pass value to global page object\n      if (typeof conf.valueHandler === 'function')\n        conf.valueHandler(value)\n      else if (value !== undefined)\n        page[key] = value\n    }\n\n    let control\n    if (Array.isArray(conf.select)) {\n      control = document.createElement('div')\n      control.className = 'select is-fullwidth'\n\n      const opts = []\n      for (let j = 0; j < conf.select.length; j++) {\n        const opt = conf.select[j]\n        const selected = (value && (opt.value === String(value))) ||\n          (value === undefined && opt.value === 'default')\n        opts.push(`\n          <option value=\"${opt.value}\"${selected ? ' selected' : ''}>\n            ${opt.text}${opt.value === 'default' ? ' (default)' : ''}\n          </option>\n        `)\n      }\n\n      control.innerHTML = `\n        <select id=\"${key}\">\n          ${opts.join('\\n')}\n        </select>\n      `\n    } else if (conf.number !== undefined) {\n      control = document.createElement('input')\n      control.id = control.name = key\n      control.className = 'input is-fullwidth'\n      control.type = 'number'\n\n      if (conf.number.min !== undefined)\n        control.min = conf.number.min\n      if (conf.number.max !== undefined)\n        control.max = conf.number.max\n      if (typeof value === 'number')\n        control.value = value\n      else if (fallback[key] !== undefined)\n        control.value = fallback[key]\n    }\n\n    let help\n    if (conf.disabled) {\n      if (Array.isArray(conf.select))\n        control.querySelector('select').disabled = conf.disabled\n      else\n        control.disabled = conf.disabled\n      help = 'This option is currently not configurable.'\n    } else if (typeof conf.help === 'string') {\n      help = conf.help\n    } else if (conf.help === true && conf.number !== undefined) {\n      const tmp = []\n\n      if (fallback[key] !== undefined)\n        tmp.push(`Default is ${fallback[key]}${conf.number.suffix || ''}.`)\n      if (conf.number.min !== undefined)\n        tmp.push(`Min is ${conf.number.min}${conf.number.suffix || ''}.`)\n      if (conf.number.max !== undefined)\n        tmp.push(`Max is ${conf.number.max}${conf.number.suffix || ''}.`)\n\n      help = tmp.join(' ')\n    }\n\n    field.innerHTML = `\n      <label class=\"label\">${conf.label}</label>\n      <div class=\"control\"></div>\n      ${help ? `<p class=\"help\">${help}</p>` : ''}\n    `\n    field.querySelector('div.control').appendChild(control)\n\n    form.appendChild(field)\n  }\n\n  const submit = document.createElement('div')\n  submit.className = 'field'\n  submit.innerHTML = `\n    <p class=\"control\">\n      <button id=\"saveConfig\" type=\"submit\" class=\"button is-danger is-outlined is-fullwidth\">\n        <span class=\"icon\">\n          <i class=\"icon-floppy\"></i>\n        </span>\n        <span>Save & reload</span>\n      </button>\n    </p>\n    <p class=\"help\">\n      This configuration will only be used in this browser.<br>\n      After reloading the page, some of them will also be applied to the ShareX config that you can download by clicking on the ShareX icon below.\n    </p>\n  `\n\n  form.appendChild(submit)\n  form.querySelector('#saveConfig').addEventListener('click', () => {\n    if (!form.checkValidity())\n      return\n\n    const keys = Object.keys(config)\n      .filter(key => config[key].display !== false && config[key].disabled !== true)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      let value\n      if (config[key].select !== undefined) {\n        if (form.elements[key].value !== 'default')\n          value = form.elements[key].value\n      } else if (config[key].number !== undefined) {\n        const parsed = parseInt(form.elements[key].value)\n        if (!isNaN(parsed))\n          value = Math.min(Math.max(parsed, config[key].number.min), config[key].number.max)\n      }\n\n      if (value !== undefined && value !== fallback[key])\n        localStorage[lsKeys[key]] = value\n      else\n        localStorage.removeItem(lsKeys[key])\n    }\n\n    swal({\n      title: 'Woohoo!',\n      text: 'Configuration saved into this browser.',\n      icon: 'success'\n    }).then(() => {\n      window.location.reload()\n    })\n  })\n\n  tabContent.appendChild(form)\n}\n\npage.getPrettyUploadAge = hours => {\n  if (hours === 0) {\n    return 'Permanent'\n  } else if (hours < 1) {\n    const minutes = hours * 60\n    return `${minutes} minute${minutes === 1 ? '' : 's'}`\n  } else if (hours >= 24) {\n    const days = hours / 24\n    return `${days} day${days === 1 ? '' : 's'}`\n  } else {\n    return `${hours} hour${hours === 1 ? '' : 's'}`\n  }\n}\n\n// Handle image paste event\nwindow.addEventListener('paste', event => {\n  const items = (event.clipboardData || event.originalEvent.clipboardData).items\n  const index = Object.keys(items)\n  for (let i = 0; i < index.length; i++) {\n    const item = items[index[i]]\n    if (item.kind === 'file') {\n      const blob = item.getAsFile()\n      /* eslint-disable-next-line compat/compat */\n      const file = new File([blob], `pasted-image.${blob.type.match(/(?:[^/]*\\/)([^;]*)/)[1]}`, {\n        type: blob.type\n      })\n      page.dropzone.addFile(file)\n    }\n  }\n})\n\nwindow.onload = () => {\n  if (window.cookieconsent)\n    window.cookieconsent.initialise({\n      cookie: {\n        name: 'cookieconsent_status',\n        expiryDays: 730,\n        secure: true\n      },\n      palette: {\n        popup: {\n          background: '#282828',\n          text: '#eff0f1'\n        },\n        button: {\n          background: '#209cee',\n          text: '#ffffff'\n        }\n      },\n      theme: 'classic',\n      position: 'bottom-left',\n      content: {\n        message: 'We use cookies to offer you a better browsing experience and to analyze our traffic. You consent to our cookies if you continue to use this website.',\n        dismiss: 'Got it!',\n        link: 'Details in our Cookie Policy',\n        href: 'cookiepolicy'\n      }\n    })\n\n  page.checkIfPublic()\n\n  page.clipboardJS = new ClipboardJS('.clipboard-js')\n\n  page.clipboardJS.on('success', () => {\n    return swal('', 'The link has been copied to clipboard.', 'success', {\n      buttons: false,\n      timer: 1500\n    })\n  })\n\n  page.clipboardJS.on('error', page.onError)\n\n  page.lazyLoad = new LazyLoad({\n    elements_selector: '.field.uploads img'\n  })\n\n  document.querySelector('#createAlbum').addEventListener('click', () => {\n    page.createAlbum()\n  })\n}\n"]}