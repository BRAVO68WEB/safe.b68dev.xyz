{"version":3,"sources":["home.js"],"names":["const","lsKeys","token","chunkSize","parallelUploads","uploadsHistoryOrder","previewImages","fileLength","uploadAge","page","localStorage","private","enableUserAccounts","maxSize","temporaryUploadAges","fileIdentifierLength","album","maxSizeBytes","urlMaxSize","urlMaxSizeBytes","tabs","activeTab","albumSelect","previewTemplate","dropzone","clipboardJS","lazyLoad","urlsQueue","activeUrlsQueue","imageExts","videoExts","albumTitleMaxLength","albumDescMaxLength","onInitError","error","document","querySelector","classList","add","querySelectorAll","forEach","element","uploadButton","innerText","remove","addEventListener","location","reload","response","onAxiosError","onError","console","content","createElement","innerHTML","toString","swal","title","icon","statusText","520","521","522","523","524","525","526","527","530","status","description","data","checkIfPublic","let","renderShown","axios","get","onDownloadProgress","doRender","then","parseInt","preparePage","catch","prepareUpload","verifyToken","button","href","reloadOnError","post","success","text","removeItem","value","prepareShareX","fetchAlbums","prepareUploadConfig","getPrettyBytes","prepareDropzone","event","addUrlsToQueue","tabsContainer","loop","i","id","dataset","tabContent","setActiveTab","push","tab","length","index","headers","Array","isArray","albums","option","name","appendChild","previewNode","parentNode","removeChild","tabDiv","div","className","previewsContainer","Dropzone","body","url","paramName","clickable","maxFilesize","uploadMultiple","createImageThumbnails","autoProcessQueue","chunking","Boolean","parallelChunkUploads","timeout","init","this","on","file","previewElement","xhr","ontimeout","instances","getUploadingFiles","filter","instance","_handleUploadError","undefined","_start","Date","now","upload","chunked","setRequestHeader","chunks","progress","prettyBytesPerSec","total","Math","max","size","percentage","bytesSent","toFixed","upl","prefix","skipProgress","done","last","totalChunkCount","chunkIndex","elapsed","bytesPerSec","files","updateTemplate","test","updateTemplateIcon","chunksUploaded","uuid","original","type","albumid","filelength","age","urls","split","trim","firstChild","processUrlsQueue","shiftQueue","initUrlUpload","match","finishedUrlUpload","shift","templateElement","iconClass","iconElement","link","a","clipboard","clipboardText","parentElement","exec","extname","toLowerCase","includes","img","setAttribute","src","onerror","currentTarget","update","expirydate","expiryDate","getPrettyDate","createAlbum","buttons","cancel","confirm","closeModal","download","checked","public","selected","fallback","min","config","siBytes","label","select","help","valueHandler","display","number","round","disabled","force","isNaN","suffix","uploadFields","stored","parseFloat","String","getPrettyUploadAge","default","form","preventDefault","configKeys","Object","keys","key","conf","field","parsed","control","opts","j","opt","join","tmp","submit","checkValidity","elements","hours","minutes","days","window","items","clipboardData","originalEvent","item","kind","blob","getAsFile","File","addFile","onload","ClipboardJS","timer","LazyLoad","elements_selector"],"mappings":"AAEAA,IAAMC,OAAS,CACbC,MAAO,QACPC,UAAW,YACXC,gBAAiB,kBACjBC,oBAAqB,sBACrBC,cAAe,gBACfC,WAAY,aACZC,UAAW,aAGPC,KAAO,CAEXP,MAAOQ,aAAaT,OAAOC,OAG3BS,QAAS,KACTC,mBAAoB,KACpBC,QAAS,KACTV,UAAW,KACXW,oBAAqB,KACrBC,qBAAsB,KAGtBC,MAAO,KAEPZ,gBAAiB,EACjBE,cAAe,KACfC,WAAY,KACZC,UAAW,KAEXS,aAAc,KACdC,WAAY,KACZC,gBAAiB,KAEjBC,KAAM,GACNC,UAAW,KACXC,YAAa,KACbC,gBAAiB,KAEjBC,SAAU,KACVC,YAAa,KACbC,SAAU,KAGVC,UAAW,GACXC,gBAAiB,EAIjBC,UAAW,CAAC,QAAS,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAC/EC,UAAW,CAAC,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAErDC,oBAAqB,GACrBC,mBAAoB,IAItBC,YAAgB,SAAGC,GAEjBC,SAASC,cAAc,aAAaC,UAAUC,IAAI,aAClDH,SAASC,cAAc,SAASC,UAAUC,IAAI,aAC9CH,SAASI,iBAAiB,gBAAgBC,SAAO,SAACC,GAChD,OAAOA,EAAQJ,UAAUC,IAAI,gBAI/BtC,IAAM0C,EAAeP,SAASC,cAAc,kBAC5CM,EAAaC,UAAY,oCACzBD,EAAaL,UAAUO,OAAO,cAC9BF,EAAaL,UAAUO,OAAO,aAE9BF,EAAaG,iBAAiB,SAAO,WACnCC,SAASC,YAGPb,EAAMc,SACRvC,KAAKwC,aAAaf,GAElBzB,KAAKyC,QAAQhB,IAIjBgB,QAAY,SAAGhB,GACbiB,QAAQjB,MAAMA,GAEdlC,IAAMoD,EAAUjB,SAASkB,cAAc,OAEvC,OADAD,EAAQE,UAAY,SAASpB,EAAMqB,WAAU,UACtCC,KAAK,CACVC,MAAO,qBACPC,KAAM,QACNN,QAAAA,KAKJH,aAAiB,SAAGf,GAClBiB,QAAQjB,MAAMA,GAGdlC,IAYM2D,EAZmB,CACvBC,IAAK,gBACLC,IAAK,qBACLC,IAAK,uBACLC,IAAK,wBACLC,IAAK,qBACLC,IAAK,uBACLC,IAAK,0BACLC,IAAK,gBACLC,IAAK,oBAG6BlC,EAAMc,SAASqB,SAAWnC,EAAMc,SAASW,WACvEW,EAAcpC,EAAMc,SAASuB,MAAQrC,EAAMc,SAASuB,KAAKD,YAC3DpC,EAAMc,SAASuB,KAAKD,YACpB,sFAEJ,OAAOd,KAAQtB,EAAMc,SAAS,OAAM,IAAIW,EAAcW,EAAa,UAGrEE,cAAkB,WAChBC,IAAIC,GAAc,EAClB,OAAOC,MAAMC,IAAI,YAAa,CAC5BC,mBAAkB,WAEXH,GAAwC,mBAAlBjE,KAAKqE,WAC9BrE,KAAKqE,WACLJ,GAAc,MAGjBK,MAAI,SAAC/B,GAQN,OAPAvC,KAAKE,QAAUqC,EAASuB,KAAK5D,QAC7BF,KAAKG,mBAAqBoC,EAASuB,KAAK3D,mBACxCH,KAAKI,QAAUmE,SAAShC,EAASuB,KAAK1D,SACtCJ,KAAKQ,aAA8B,IAAfR,KAAKI,QACzBJ,KAAKN,UAAY6E,SAAShC,EAASuB,KAAKpE,WACxCM,KAAKK,oBAAsBkC,EAASuB,KAAKzD,oBACzCL,KAAKM,qBAAuBiC,EAASuB,KAAKxD,qBACnCN,KAAKwE,iBACXC,MAAMzE,KAAKwB,cAGhBgD,YAAgB,WACd,IAAIxE,KAAKE,QAaP,OAAOF,KAAK0E,gBAZZ,GAAI1E,KAAKP,MACP,OAAOO,KAAK2E,YAAY3E,KAAKP,OAAO,GAEpCF,IAAMqF,EAASlD,SAASC,cAAc,kBACtCiD,EAAOC,KAAO,OACdD,EAAOhD,UAAUO,OAAO,cACpBnC,KAAKG,mBACPyE,EAAO1C,UAAY,kDAEnB0C,EAAO1C,UAAY,8CAM3ByC,YAAgB,SAAIlF,EAAOqF,GACzB,OAAOZ,MAAMa,KAAK,oBAAqB,CAAAtF,MAAEA,IAAS6E,MAAI,SAAC/B,GACrD,OAA8B,IAA1BA,EAASuB,KAAKkB,QACTjC,KAAK,CACVC,MAAO,qBACPiC,KAAM1C,EAASuB,KAAKD,YACpBZ,KAAM,UACLqB,MAAI,WACAQ,IACL7E,aAAaiF,WAAW,SACxB7C,SAASC,cAGbrC,aAAaT,OAAOC,OAASA,EAC7BO,KAAKP,MAAQA,EACNO,KAAK0E,oBACXD,MAAMzE,KAAKwB,cAGhBkD,cAAkB,WAEZ1E,KAAKP,QAEPiC,SAASC,cAAc,aAAaC,UAAUO,OAAO,aAErDnC,KAAKa,YAAca,SAASC,cAAc,gBAC1C3B,KAAKa,YAAYuB,iBAAiB,UAAQ,WACxCpC,KAAKO,MAAQgE,SAASvE,KAAKa,YAAYsE,OAEL,mBAAvBnF,KAAKoF,eACdpF,KAAKoF,mBAITpF,KAAKqF,eAIPrF,KAAKsF,sBAGL5D,SAASC,cAAc,mBAAmBkB,UAAY7C,KAAKuF,eAAevF,KAAKQ,cAC/EkB,SAASC,cAAc,kBAAkBC,UAAUC,IAAI,cAElD7B,KAAKP,OAASO,KAAKG,qBACtBuB,SAASC,cAAc,kBAAkBkB,UAAY,oDAGvD7C,KAAKwF,kBAG6B,mBAAvBxF,KAAKoF,eACdpF,KAAKoF,gBAGP7F,IAAMkB,EAAaiB,SAASC,cAAc,eACtClB,IACFT,KAAKS,WAAa8D,SAAS9D,EAAWoC,WACtC7C,KAAKU,gBAAoC,IAAlBV,KAAKS,WAC5BA,EAAWoC,UAAY7C,KAAKuF,eAAevF,KAAKU,iBAChDgB,SAASC,cAAc,eAAeS,iBAAiB,SAAO,SAAEqD,GAC9DzF,KAAK0F,qBAOT,IAFAnG,IAAMoG,EAAgBjE,SAASC,cAAc,SACvChB,EAAOgF,EAAc7D,iBAAiB,MACxC8D,EAAO,SAAWC,GACpBtG,IAAMuG,EAAKnF,EAAKkF,GAAGE,QAAQD,GACrBE,EAAatE,SAASC,cAAc,IAAImE,GACzCE,IAELrF,EAAKkF,GAAGzD,iBAAiB,SAAO,WAC9BpC,KAAKiG,aAAaJ,MAEpB7F,KAAKW,KAAKuF,KAAK,CAAEC,IAAKxF,EAAKkF,GAAIlD,QAASqD,MARjCH,EAAI,EAAGA,EAAIlF,EAAKyF,OAAQP,IAAGD,EAAAC,GAYhC7F,KAAKW,KAAKyF,SACZpG,KAAKiG,aAAa,GAClBN,EAAc/D,UAAUO,OAAO,eAInC8D,aAAiB,SAAGI,GAClB,IAAKrC,IAAI6B,EAAI,EAAGA,EAAI7F,KAAKW,KAAKyF,OAAQP,IAChCA,IAAMQ,GACRrG,KAAKW,KAAKkF,GAAGM,IAAIvE,UAAUC,IAAI,aAC/B7B,KAAKW,KAAKkF,GAAGlD,QAAQf,UAAUO,OAAO,aACtCnC,KAAKY,UAAYyF,IAEjBrG,KAAKW,KAAKkF,GAAGM,IAAIvE,UAAUO,OAAO,aAClCnC,KAAKW,KAAKkF,GAAGlD,QAAQf,UAAUC,IAAI,eAIzCwD,YAAgB,WACd,OAAOnB,MAAMC,IAAI,aAAc,CAAEmC,QAAS,CAAE7G,MAAOO,KAAKP,SAAW6E,MAAI,SAAC/B,GACtE,IAA8B,IAA1BA,EAASuB,KAAKkB,QAChB,OAAOjC,KAAK,qBAAsBR,EAASuB,KAAKD,YAAa,SAG/D,GAAI0C,MAAMC,QAAQjE,EAASuB,KAAK2C,SAAWlE,EAASuB,KAAK2C,OAAOL,OAC9D,IAAKpC,IAAI6B,EAAI,EAAGA,EAAItD,EAASuB,KAAK2C,OAAOL,OAAQP,IAAK,CACpDtG,IAAMgB,EAAQgC,EAASuB,KAAK2C,OAAOZ,GAC7Ba,EAAShF,SAASkB,cAAc,UACtC8D,EAAOvB,MAAQ5E,EAAMuF,GACrBY,EAAO7D,UAAYtC,EAAMoG,KACzB3G,KAAKa,YAAY+F,YAAYF,OAEhCjC,MAAMzE,KAAKwB,cAGhBgE,gBAAoB,WAElBjG,IAAMsH,EAAcnF,SAASC,cAAc,QAC3C3B,KAAKc,gBAAkB+F,EAAYhE,UACnCgE,EAAYC,WAAWC,YAAYF,GAGnCtH,IAAMyH,EAAStF,SAASC,cAAc,cAChCsF,EAAMvF,SAASkB,cAAc,OACnCqE,EAAIC,UAAY,sBAChBD,EAAIpE,UAAY,uPAQhBmE,EAAOrF,cAAc,iBAAiBiF,YAAYK,GAElD1H,IAAM4H,EAAoBH,EAAOrF,cAAc,6BAE/C3B,KAAKe,SAAW,IAAIqG,SAAS1F,SAAS2F,KAAM,CAC1CC,IAAK,aACLC,UAAW,UACXC,UAAWR,EAAOrF,cAAc,aAChC8F,YAAazH,KAAKQ,aAAe,KAAO,KACxCb,gBAAiBK,KAAKL,gBACtB+H,gBAAgB,EAJhBP,kBAKAA,EACArG,gBAAiBd,KAAKc,gBACtB6G,uBAAuB,EACvBC,kBAAkB,EAClBtB,QAAS,CAAE7G,MAAOO,KAAKP,OACvBoI,SAAUC,QAAQ9H,KAAKN,WACvBA,UAA4B,IAAjBM,KAAKN,UAChBqI,sBAAsB,EACtBC,QAAS,EAETC,KAAA,WACEC,KAAKC,GAAG,aAAW,SAAEC,GAEI,IAAnBpI,KAAKY,WACPZ,KAAKiG,aAAa,GAGpBe,EAAOrF,cAAc,YAAYC,UAAUO,OAAO,aAElDiG,EAAKC,eAAe1G,cAAc,SAASkB,UAAYuF,EAAKzB,KAC5DyB,EAAKC,eAAe1G,cAAc,yBAAyBkB,UAAY,uBAGzEqF,KAAKC,GAAG,WAAS,SAAGC,EAAME,GAEnBA,EAAIC,YACPD,EAAIC,UAAS,WACXhJ,IAAMiJ,EAAYxI,KAAKe,SAAS0H,oBAC7BC,QAAM,SAACC,GAAS,OAAGA,EAASL,MAAQA,KACvCtI,KAAKe,SAAS6H,mBAAmBJ,EAAWF,EAAK,iEAIlCO,IAAfP,EAAIQ,SACNR,EAAIQ,OAASC,KAAKC,OAGfZ,EAAKa,OAAOC,UACI,OAAflJ,KAAKO,OAAgB+H,EAAIa,iBAAiB,UAAWnJ,KAAKO,OACtC,OAApBP,KAAKF,YAAqBwI,EAAIa,iBAAiB,aAAcnJ,KAAKF,YAC/C,OAAnBE,KAAKD,WAAoBuI,EAAIa,iBAAiB,MAAOnJ,KAAKD,YAG3DqI,EAAKa,OAAOC,QAEsB,IAA9Bd,EAAKa,OAAOG,OAAOhD,SAC1BgC,EAAKC,eAAe1G,cAAc,yBAAyBkB,UAAY,qBAAqBuF,EAAKa,OAAO,gBAAe,KAFvHb,EAAKC,eAAe1G,cAAc,yBAAyBkB,UAAY,gBAM3EqF,KAAKC,GAAG,kBAAgB,SAAGC,EAAMiB,GAE/B9J,IAqBI+J,EArBEC,EAAQC,KAAKC,IAAIrB,EAAKsB,KAAMtB,EAAKa,OAAOM,OACxCI,GAAcvB,EAAKa,OAAOW,UAAYL,EAAQ,KAAKM,QAAQ,GAE3DC,EAAM1B,EAAKa,OAAOC,QACpBd,EAAKa,OAAOG,OAAOhB,EAAKa,OAAOG,OAAOhD,OAAS,GAC/CgC,EAAKa,OACHX,EAAMwB,EAAIxB,KAAOF,EAAKE,IAExByB,EAAS,aACTC,GAAe,EACnB,GAAI5B,EAAKa,OAAOC,QAAS,CACvB3J,IAAM0K,EAAOH,EAAIF,YAAcE,EAAIP,MAC7BW,EAAO9B,EAAKa,OAAOG,OAAOhD,SAAWgC,EAAKa,OAAOkB,gBACnDC,EAAahC,EAAKa,OAAOG,OAAOhD,OAChC6D,IAASC,IACXE,IACAJ,GAAe,GAEjBD,EAAS,mBAAmBK,EAAU,IAAIhC,EAAKa,OAAO,gBAAe,IAIvE,IAAKe,EAAc,CACjBzK,IAAM8K,GAAWtB,KAAKC,MAAQV,EAAIQ,QAAU,IACtCwB,EAAcD,EAAWP,EAAIF,UAAYS,EAAW,EAC1Df,EAAoBtJ,KAAKuF,eAAe+E,GAG1ClC,EAAKC,eAAe1G,cAAc,yBAAyBkB,UACzDkH,EAAS,IAAIJ,EAAU,KAAIL,EAAoB,QAAQA,EAAiB,KAAO,OAGnFpB,KAAKC,GAAG,WAAS,SAAGC,EAAMtE,GACnBA,IACLsE,EAAKC,eAAe1G,cAAc,yBAAyBC,UAAUC,IAAI,cAEpD,IAAjBiC,EAAKkB,UACPoD,EAAKC,eAAe1G,cAAc,UAAUkB,UAAYiB,EAAKD,YAC7DuE,EAAKC,eAAe1G,cAAc,UAAUC,UAAUO,OAAO,cAG3DoE,MAAMC,QAAQ1C,EAAKyG,QAAUzG,EAAKyG,MAAM,IAC1CvK,KAAKwK,eAAepC,EAAMtE,EAAKyG,MAAM,QAGzCrC,KAAKC,GAAG,SAAO,SAAGC,EAAM3G,IAEA,iBAAVA,GAAsB,mBAAmBgJ,KAAKhJ,IACtC,iBAAVA,GAAsB,iBAAiBgJ,KAAKhJ,EAAMoC,gBAC1DpC,EAAQ,mBAAmBzB,KAAKuF,eAAe6C,EAAKsB,MAAK,MAE3D1J,KAAK0K,mBAAmBtC,EAAKC,eAAgB,cAE7CD,EAAKC,eAAe1G,cAAc,yBAAyBC,UAAUC,IAAI,aAEzEuG,EAAKC,eAAe1G,cAAc,UAAUkB,UAAYpB,EAAMoC,aAAepC,EAC7E2G,EAAKC,eAAe1G,cAAc,UAAUC,UAAUO,OAAO,iBAIjEwI,eAAA,SAAgBvC,EAAM6B,GAIpB,OAHA7B,EAAKC,eAAe1G,cAAc,yBAAyBkB,UACzD,cAAcuF,EAAKa,OAAO,gBAAe,WAEpC/E,MAAMa,KAAK,0BAA2B,CAE3CwF,MAAO,CAAC,CACNK,KAAMxC,EAAKa,OAAO2B,KAClBC,SAAUzC,EAAKzB,KACfmE,KAAM1C,EAAK0C,KACXC,QAAS/K,KAAKO,MACdyK,WAAYhL,KAAKF,WACjBmL,IAAKjL,KAAKD,aAEX,CACDuG,QAAS,CACP7G,MAAOO,KAAKP,SAEbgF,OAAK,SAAChD,GAEP,OAAOA,EAAMc,SAASuB,KAAOrC,EAAMc,SAAW,CAC5CuB,KAAM,CACJkB,SAAS,EACTnB,YAAapC,EAAMqB,gBAGtBwB,MAAI,SAAC/B,GAWN,OAVA6F,EAAKC,eAAe1G,cAAc,yBAAyBC,UAAUC,IAAI,cAE3C,IAA1BU,EAASuB,KAAKkB,UAChBoD,EAAKC,eAAe1G,cAAc,UAAUkB,UAAYN,EAASuB,KAAKD,YACtEuE,EAAKC,eAAe1G,cAAc,UAAUC,UAAUO,OAAO,cAG3DI,EAASuB,KAAKyG,OAAShI,EAASuB,KAAKyG,MAAM,IAC7CvK,KAAKwK,eAAepC,EAAM7F,EAASuB,KAAKyG,MAAM,IAEzCN,WAMfvE,eAAmB,WACjBnG,IAAM2L,EAAOxJ,SAASC,cAAc,SAASwD,MAC1CgG,MAAM,SACNzC,QAAM,SAACpB,GACN,OAAOA,EAAI8D,OAAOhF,UAGtB,IAAK8E,EAAK9E,OACR,OAAOrD,KAAK,qBAAsB,iCAAkC,SAEtExD,IAAMyH,EAAStF,SAASC,cAAc,aACtCqF,EAAOrF,cAAc,YAAYC,UAAUO,OAAO,aAElD,IAAK6B,IAAI6B,EAAI,EAAGA,EAAIqF,EAAK9E,OAAQP,IAAK,CACpCtG,IAAMuB,EAAkBY,SAASkB,cAAc,YAC/C9B,EAAgB+B,UAAY7C,KAAKc,gBAAgBsK,OAEjD7L,IAAM8I,EAAiBvH,EAAgB6B,QAAQ0I,WAC/ChD,EAAe1G,cAAc,SAASkB,UAAYqI,EAAKrF,GACvDwC,EAAe1G,cAAc,yBAAyBkB,UAAY,oBAExCmE,EAAOrF,cAAc,YAC7BiF,YAAYyB,GAE9BrI,KAAKkB,UAAUgF,KAAK,CAClBoB,IAAK4D,EAAKrF,GAJVwC,eAKAA,IAIJrI,KAAKsL,mBACL5J,SAASC,cAAc,SAASwD,MAAQ,KAG1CnF,KAAKsL,iBAAgB,WACnB,GAAKtL,KAAKkB,UAAUkF,OAsDpB,OAAOmF,IAjCP,SAASC,EAAepD,GAItB,OAHAA,EAAKC,eAAe1G,cAAc,yBAAyBkB,UACzD,mCAEKqB,MAAMa,KAAK,aAAc,CAC9BmG,KAAM,CAAC9C,EAAKd,MACX,CACDhB,QAAS,CACP7G,MAAOO,KAAKP,MACZsL,QAAS/K,KAAKO,MACd0K,IAAKjL,KAAKD,UACViL,WAAYhL,KAAKF,cAElB2E,OAAK,SAAChD,GAEP,OAAOA,EAAMc,SAASuB,KAAOrC,EAAMc,SAAW,CAC5CuB,KAAM,CACJkB,SAAS,EACTnB,YAAapC,EAAMqB,gBAGtBwB,MAAI,SAAC/B,GACN,OAzCJ,SAA4B6F,EAAMtE,GAGhC,GAFAsE,EAAKC,eAAe1G,cAAc,yBAAyBC,UAAUC,IAAI,cAEpD,IAAjBiC,EAAKkB,QAAmB,CAC1BzF,IAAMkM,EAAQ3H,EAAKD,YAAY4H,MAAM,uBACjCA,GAASA,EAAM,KACjB3H,EAAKD,YAAc,0BAA0B7D,KAAKuF,eAAekG,EAAM,IAAG,KAE5ErD,EAAKC,eAAe1G,cAAc,UAAUkB,UAAYiB,EAAKD,YAC7DuE,EAAKC,eAAe1G,cAAc,UAAUC,UAAUO,OAAO,aAO/D,OAJIoE,MAAMC,QAAQ1C,EAAKyG,QAAUzG,EAAKyG,MAAM,IAC1CvK,KAAKwK,eAAepC,EAAMtE,EAAKyG,MAAM,IAEvCvK,KAAKmB,kBACEoK,IAyBEG,CAAkBtD,EAAM7F,EAASuB,SAI5C,SAASyH,IACP,KAAOvL,KAAKkB,UAAUkF,QAAWpG,KAAKmB,gBAAkBnB,KAAKL,iBAC3DK,KAAKmB,kBACLqK,EAAcxL,KAAKkB,UAAUyK,WAOnC3L,KAAK0K,mBAAkB,SAAIkB,EAAiBC,GAC1CtM,IAAMuM,EAAcF,EAAgBjK,cAAc,SAC7CmK,IAELA,EAAYlK,UAAUC,IAAIgK,GAC1BC,EAAYlK,UAAUO,OAAO,eAG/BnC,KAAKwK,eAAc,SAAIpC,EAAM7F,GAC3B,GAAKA,EAAS+E,IAAd,CAEA/H,IAAMwM,EAAO3D,EAAKC,eAAe1G,cAAc,SACzCqK,EAAID,EAAKpK,cAAc,KACvBsK,EAAY7D,EAAKC,eAAe1G,cAAc,qCACpDqK,EAAEnH,KAAOmH,EAAEnJ,UAAYoJ,EAAUlG,QAAQmG,cAAgB3J,EAAS+E,IAElEyE,EAAKnK,UAAUO,OAAO,aACtB8J,EAAUE,cAAcvK,UAAUO,OAAO,aAEzC5C,IAAM6M,EAAO,eAAeA,KAAK7J,EAAS+E,KACpC+E,EAAUD,GAAQA,EAAK,GACzBA,EAAK,GAAGE,cACR,KAEJ,GAAItM,KAAKoB,UAAUmL,SAASF,GAC1B,GAAIrM,KAAKH,cAAe,CACtBN,IAAMiN,EAAMpE,EAAKC,eAAe1G,cAAc,OAC9C6K,EAAIC,aAAa,MAAOlK,EAASoE,MAAQ,IACzC6F,EAAIzG,QAAQ2G,IAAMnK,EAAS+E,IAC3BkF,EAAI5K,UAAUO,OAAO,aACrBqK,EAAIG,QAAO,SAAGlH,GAGZA,EAAMmH,cAAchL,UAAUC,IAAI,aAClC7B,KAAK0K,mBAAmBtC,EAAKC,eAAgB,iBAE/CrI,KAAKiB,SAAS4L,OAAOzE,EAAKC,eAAevG,iBAAiB,aAE1D9B,KAAK0K,mBAAmBtC,EAAKC,eAAgB,qBAExCrI,KAAKqB,UAAUkL,SAASF,GAC/BrM,KAAK0K,mBAAmBtC,EAAKC,eAAgB,cAE7CrI,KAAK0K,mBAAmBtC,EAAKC,eAAgB,gBAE/C,GAAI9F,EAASuK,WAAY,CACvBvN,IAAMwN,EAAa3E,EAAKC,eAAe1G,cAAc,gBACrDoL,EAAWlK,UAAY,QAAQ7C,KAAKgN,cAAc,IAAIjE,KAA2B,IAAtBxG,EAASuK,aACpEC,EAAWnL,UAAUO,OAAO,gBAIhCnC,KAAKiN,YAAW,WACd1N,IAAM0H,EAAMvF,SAASkB,cAAc,OACnCqE,EAAIpE,UAAY,iJAGqE7C,KAAK,oBAAmB,yDAEzEA,KAAK,oBAAmB,6LAI0CA,KAAK,mBAAkB,oEAEzFA,KAAK,mBAAkB,4dAoB3D+C,KAAK,CACHC,MAAO,mBACPC,KAAM,OACNN,QAASsE,EACTiG,QAAS,CACPC,QAAQ,EACRC,QAAS,CACPC,YAAY,MAGf/I,MAAI,SAACa,GACN,GAAKA,EAAL,CAEA5F,IAAMoH,EAAOjF,SAASC,cAAc,aAAawD,MAAMiG,OACvDlH,MAAMa,KAAK,aAAc,CAjCvB4B,KAkCAA,EACA9C,YAAanC,SAASC,cAAc,oBAAoBwD,MAAMiG,OAC9DkC,SAAU5L,SAASC,cAAc,iBAAiB4L,QAClDC,OAAQ9L,SAASC,cAAc,eAAe4L,SAC7C,CACDjH,QAAS,CACP7G,MAAOO,KAAKP,SAEb6E,MAAI,SAAC/B,GACN,IAA8B,IAA1BA,EAASuB,KAAKkB,QAChB,OAAOjC,KAAK,qBAAsBR,EAASuB,KAAKD,YAAa,SAE/DtE,IAAMmH,EAAShF,SAASkB,cAAc,UACtC5C,KAAKa,YAAY+F,YAAYF,GAC7BA,EAAOvB,MAAQ5C,EAASuB,KAAKgC,GAC7BY,EAAO7D,UAAY8D,EACnBD,EAAO+G,UAAW,EAElB1K,KAAK,UAAW,kCAAmC,cAClD0B,MAAMzE,KAAKyC,cAIlBzC,KAAKsF,oBAAmB,WACtB/F,IAAMmO,EAAW,CACfhO,UAAWM,KAAKN,UAChBC,gBAAiBK,KAAKL,iBAGlBU,EAAsBkG,MAAMC,QAAQxG,KAAKK,sBAAwBL,KAAKK,oBAAoB+F,OAC1F9F,EAAuBN,KAAKM,sBACS,iBAAlCN,KAAKM,qBAAqBqN,KACQ,iBAAlC3N,KAAKM,qBAAqBmJ,IAE7BmE,EAAS,CACbC,QAAS,CACPC,MAAO,oBACPC,OAAQ,CACN,CAAE5I,MAAO,UAAWF,KAAM,8BAC1B,CAAEE,MAAO,IAAKF,KAAM,gCAEtB+I,KAAM,wEACNC,aAAA,cAEFnO,WAAY,CACVoO,QAAS5N,EACTwN,MAAO,yBACPK,OAAQ7N,EAAuB,CAC7BqN,IAAK3N,KAAKM,qBAAqBqN,IAC/BlE,IAAKzJ,KAAKM,qBAAqBmJ,IAC/B2E,OAAO,QACLvF,EACJmF,MAAM,EACNK,SAAU/N,GAAwBN,KAAKM,qBAAqBgO,OAE9DvO,UAAW,CACTmO,QAAS7N,EACTyN,MAAO,aACPC,OAAQ,GACRC,KAAM,sFAERtO,UAAW,CACTwO,SAAUK,MAAMvO,KAAKN,WACrBoO,MAAO,yBACPK,OAAQ,CACNR,IAAK,EACLlE,IAAK,GACL+E,OAAQ,MACRJ,OAAO,GAETJ,MAAM,GAERrO,gBAAiB,CACfmO,MAAO,mBACPK,OAAQ,CACNR,IAAK,EACLlE,IAAK,GACL2E,OAAO,GAETJ,MAAM,GAERpO,oBAAqB,CACnBkO,MAAO,wBACPC,OAAQ,CACN,CAAE5I,MAAO,UAAWF,KAAM,sBAC1B,CAAEE,MAAO,IAAKF,KAAM,uBAEtB+I,KAAM,qTAENC,aAAA,SAAc9I,GACZ,GAAc,MAAVA,EAEF,IADA5F,IAAMkP,EAAe/M,SAASI,iBAAiB,2BACtC+D,EAAI,EAAGA,EAAI4I,EAAarI,OAAQP,IACvC4I,EAAa5I,GAAGjE,UAAUC,IAAI,iBAItChC,cAAe,CACbiO,MAAO,0BACPC,OAAQ,CACN,CAAE5I,MAAO,UAAWF,KAAM,OAC1B,CAAEE,MAAO,IAAKF,KAAM,OAEtB+I,KAAM,gEACNC,aAAA,SAAc9I,GACZnF,KAAKH,cAA0B,MAAVsF,KAK3B,GAAI9E,EAEF,IADAd,IAAMmP,EAASC,WAAW1O,aAAaT,OAAOO,YACrC8F,EAAI,EAAGA,EAAI7F,KAAKK,oBAAoB+F,OAAQP,IAAK,CACxDtG,IAAM0L,EAAMjL,KAAKK,oBAAoBwF,GACrC+H,EAAO7N,UAAUgO,OAAO7H,KAAK,CAC3Bf,MAAa,IAANU,EAAU,UAAY+I,OAAO3D,GACpChG,KAAMjF,KAAK6O,mBAAmB5D,KAE5BA,IAAQyD,IACVd,EAAO7N,UAAUoF,MAAQuJ,GAI/B,GAAIpO,EAAsB,CACxBoN,EAAS5N,WAAaE,KAAKM,qBAAqBwO,cAAWjG,EAC3DtJ,IAAMmP,EAASnK,SAAStE,aAAaT,OAAOM,cACvCE,KAAKM,qBAAqBgO,QAC5BC,MAAMG,IACPA,GAAU1O,KAAKM,qBAAqBqN,KACpCe,GAAU1O,KAAKM,qBAAqBmJ,MACpCmE,EAAO9N,WAAWqF,MAAQuJ,GAG9BnP,IAAMyG,EAAatE,SAASC,cAAc,eACpCoN,EAAOrN,SAASkB,cAAc,QACpCmM,EAAK3M,iBAAiB,UAAQ,SAAEqD,GAAM,OAAGA,EAAMuJ,oBAG/C,IADAzP,IAAM0P,EAAaC,OAAOC,KAAKvB,GACtB/H,EAAI,EAAGA,EAAIoJ,EAAW7I,OAAQP,IAAK,CAC1CtG,IAAM6P,EAAMH,EAAWpJ,GACjBwJ,EAAOzB,EAAOwB,GAGpB,IAAqB,IAAjBC,EAAKnB,QAAT,CAGA3O,IAAM+P,EAAQ5N,SAASkB,cAAc,OACrC0M,EAAMpI,UAAY,QAElBlD,IAAImB,OAAA,EACJ,IAAKkK,EAAKhB,SAAU,CAClB,QAAmBxF,IAAfwG,EAAKlK,MACPA,EAAQkK,EAAKlK,WACR,QAAoB0D,IAAhBwG,EAAKlB,OAAsB,CACpC5O,IAAMgQ,EAAShL,SAAStE,aAAaT,OAAO4P,KACvCb,MAAMgB,KACTpK,EAAQoK,QAEVpK,EAAQlF,aAAaT,OAAO4P,IAKG,mBAAtBC,EAAKpB,aACdoB,EAAKpB,aAAa9I,QACD0D,IAAV1D,IACPnF,KAAKoP,GAAOjK,GAGhBnB,IAAIwL,OAAA,EACJ,GAAIjJ,MAAMC,QAAQ6I,EAAKtB,QAAS,EAC9ByB,EAAU9N,SAASkB,cAAc,QACzBsE,UAAY,sBAGpB,IADA3H,IAAMkQ,EAAO,GACJC,EAAI,EAAGA,EAAIL,EAAKtB,OAAO3H,OAAQsJ,IAAK,CAC3CnQ,IAAMoQ,EAAMN,EAAKtB,OAAO2B,GAClBjC,EAAWtI,GAAUwK,EAAIxK,QAAUyJ,OAAOzJ,GAChDsK,EAAKvJ,KAAK,8BACSyJ,EAAI,MAAK,KAAIlC,EAAW,YAAc,IAAE,kBACrDkC,EAAQ,MAAiB,YAAdA,EAAIxK,MAAsB,aAAe,IAAE,mCAK9DqK,EAAQ3M,UAAY,yBACJuM,EAAG,iBACbK,EAAKG,KAAK,MAAK,wCAGI/G,IAAhBwG,EAAKlB,UACdqB,EAAU9N,SAASkB,cAAc,UACzBkD,GAAK0J,EAAQ7I,KAAOyI,EAC5BI,EAAQtI,UAAY,qBACpBsI,EAAQ1E,KAAO,cAESjC,IAApBwG,EAAKlB,OAAOR,MACd6B,EAAQ7B,IAAM0B,EAAKlB,OAAOR,UACJ9E,IAApBwG,EAAKlB,OAAO1E,MACd+F,EAAQ/F,IAAM4F,EAAKlB,OAAO1E,KACP,iBAAVtE,EACTqK,EAAQrK,MAAQA,OACS0D,IAAlB6E,EAAS0B,KAChBI,EAAQrK,MAAQuI,EAAS0B,KAG7BpL,IAAIgK,OAAA,EACJ,GAAIqB,EAAKhB,SACPmB,EAAQnB,SAAWgB,EAAKhB,SACxBL,EAAO,0CACF,GAAyB,iBAAdqB,EAAKrB,KACrBA,EAAOqB,EAAKrB,UACP,IAAkB,IAAdqB,EAAKrB,WAAiCnF,IAAhBwG,EAAKlB,OAAsB,CAC1D5O,IAAMsQ,EAAM,QAEUhH,IAAlB6E,EAAS0B,IACXS,EAAI3J,KAAK,cAAcwH,EAAS0B,IAAOC,EAAKlB,OAAOK,QAAU,IAAE,UACzC3F,IAApBwG,EAAKlB,OAAOR,KACdkC,EAAI3J,KAAK,UAAUmJ,EAAKlB,OAAU,KAAGkB,EAAKlB,OAAOK,QAAU,IAAE,UACvC3F,IAApBwG,EAAKlB,OAAO1E,KACdoG,EAAI3J,KAAK,UAAUmJ,EAAKlB,OAAU,KAAGkB,EAAKlB,OAAOK,QAAU,IAAE,KAE/DR,EAAO6B,EAAID,KAAK,KAGlBN,EAAMzM,UAAY,gCACOwM,EAAK,MAAK,uDAE/BrB,EAAO,mBAAmBA,EAAI,OAAS,IAAE,SAE7CsB,EAAM3N,cAAc,eAAeiF,YAAY4I,GAE/CT,EAAKnI,YAAY0I,IAGnB/P,IAAMuQ,EAASpO,SAASkB,cAAc,OACtCkN,EAAO5I,UAAY,QACnB4I,EAAOjN,UAAY,ygBAenBkM,EAAKnI,YAAYkJ,GACjBf,EAAKpN,cAAc,eAAeS,iBAAiB,SAAO,WACxD,GAAK2M,EAAKgB,gBAAV,CAKA,IAFAxQ,IAAM4P,EAAOD,OAAOC,KAAKvB,GACtBlF,QAAM,SAAC0G,GAAI,OAA2B,IAAxBxB,EAAOwB,GAAKlB,UAA8C,IAAzBN,EAAOwB,GAAKf,YACrDxI,EAAI,EAAGA,EAAIsJ,EAAK/I,OAAQP,IAAK,CACpCtG,IAAM6P,EAAMD,EAAKtJ,GAEbV,OAAA,EACJ,QAA2B0D,IAAvB+E,EAAOwB,GAAKrB,OACmB,YAA7BgB,EAAKiB,SAASZ,GAAKjK,QACrBA,EAAQ4J,EAAKiB,SAASZ,GAAKjK,YACxB,QAA2B0D,IAAvB+E,EAAOwB,GAAKjB,OAAsB,CAC3C5O,IAAMgQ,EAAShL,SAASwK,EAAKiB,SAASZ,GAAKjK,OACtCoJ,MAAMgB,KACTpK,EAAQqE,KAAKmE,IAAInE,KAAKC,IAAI8F,EAAQ3B,EAAOwB,GAAKjB,OAAOR,KAAMC,EAAOwB,GAAKjB,OAAO1E,WAGpEZ,IAAV1D,GAAuBA,IAAUuI,EAAS0B,GAC5CnP,aAAaT,OAAO4P,IAAQjK,EAE5BlF,aAAaiF,WAAW1F,OAAO4P,IAGnCrM,KAAK,CACHC,MAAO,UACPiC,KAAM,yCACNhC,KAAM,YACLqB,MAAI,WACLjC,SAASC,gBAIb0D,EAAWY,YAAYmI,IAGzB/O,KAAK6O,mBAAkB,SAAGoB,GACxB,GAAc,IAAVA,EACF,MAAO,YACF,GAAIA,EAAQ,EAAG,CACpB1Q,IAAM2Q,EAAkB,GAARD,EAChB,OAAUC,EAAO,WAAsB,IAAZA,EAAgB,GAAK,KAC3C,GAAID,GAAS,GAAI,CACtB1Q,IAAM4Q,EAAOF,EAAQ,GACrB,OAAUE,EAAI,QAAgB,IAATA,EAAa,GAAK,KAEvC,OAAUF,EAAK,SAAkB,IAAVA,EAAc,GAAK,MAK9CG,OAAOhO,iBAAiB,SAAO,SAAEqD,GAG/B,IAFAlG,IAAM8Q,GAAS5K,EAAM6K,eAAiB7K,EAAM8K,cAAcD,eAAeD,MACnEhK,EAAQ6I,OAAOC,KAAKkB,GACjBxK,EAAI,EAAGA,EAAIQ,EAAMD,OAAQP,IAAK,CACrCtG,IAAMiR,EAAOH,EAAMhK,EAAMR,IACzB,GAAkB,SAAd2K,EAAKC,KAAiB,CACxBlR,IAAMmR,EAAOF,EAAKG,YAEZvI,EAAO,IAAIwI,KAAK,CAACF,GAAO,gBAAgBA,EAAK5F,KAAKW,MAAM,sBAAsB,GAAM,CACxFX,KAAM4F,EAAK5F,OAEb9K,KAAKe,SAAS8P,QAAQzI,QAK5BgI,OAAOU,OAAM,WACX9Q,KAAK+D,gBAEL/D,KAAKgB,YAAc,IAAI+P,YAAY,iBAEnC/Q,KAAKgB,YAAYmH,GAAG,WAAS,WAC3B,OAAOpF,KAAK,GAAI,yCAA0C,UAAW,CACnEmK,SAAS,EACT8D,MAAO,UAIXhR,KAAKgB,YAAYmH,GAAG,QAASnI,KAAKyC,SAElCzC,KAAKiB,SAAW,IAAIgQ,SAAS,CAC3BC,kBAAmB,uBAGrBxP,SAASC,cAAc,gBAAgBS,iBAAiB,SAAO,WAC7DpC,KAAKiN","file":"home.js","sourcesContent":["/* global swal, axios, Dropzone, ClipboardJS, LazyLoad */\n\nconst lsKeys = {\n  token: 'token',\n  chunkSize: 'chunkSize',\n  parallelUploads: 'parallelUploads',\n  uploadsHistoryOrder: 'uploadsHistoryOrder',\n  previewImages: 'previewImages',\n  fileLength: 'fileLength',\n  uploadAge: 'uploadAge'\n}\n\nconst page = {\n  // user token\n  token: localStorage[lsKeys.token],\n\n  // configs from api/check\n  private: null,\n  enableUserAccounts: null,\n  maxSize: null,\n  chunkSize: null,\n  temporaryUploadAges: null,\n  fileIdentifierLength: null,\n\n  // store album id that will be used with upload requests\n  album: null,\n\n  parallelUploads: 2,\n  previewImages: null,\n  fileLength: null,\n  uploadAge: null,\n\n  maxSizeBytes: null,\n  urlMaxSize: null,\n  urlMaxSizeBytes: null,\n\n  tabs: [],\n  activeTab: null,\n  albumSelect: null,\n  previewTemplate: null,\n\n  dropzone: null,\n  clipboardJS: null,\n  lazyLoad: null,\n\n  // additional vars for url uploads\n  urlsQueue: [],\n  activeUrlsQueue: 0,\n\n  // Include BMP for uploads preview only, cause the real images will be used\n  // Sharp isn't capable of making their thumbnails for dashboard and album public pages\n  imageExts: ['.webp', '.jpg', '.jpeg', '.bmp', '.gif', '.png', '.tiff', '.tif', '.svg'],\n  videoExts: ['.webm', '.mp4', '.wmv', '.avi', '.mov', '.mkv'],\n\n  albumTitleMaxLength: 70,\n  albumDescMaxLength: 4000\n}\n\n// Handler for errors during initialization\npage.onInitError = error => {\n  // Hide these elements\n  document.querySelector('#albumDiv').classList.add('is-hidden')\n  document.querySelector('#tabs').classList.add('is-hidden')\n  document.querySelectorAll('.tab-content').forEach(element => {\n    return element.classList.add('is-hidden')\n  })\n\n  // Update upload button\n  const uploadButton = document.querySelector('#loginToUpload')\n  uploadButton.innerText = 'An error occurred. Try to reload?'\n  uploadButton.classList.remove('is-loading')\n  uploadButton.classList.remove('is-hidden')\n\n  uploadButton.addEventListener('click', () => {\n    location.reload()\n  })\n\n  if (error.response)\n    page.onAxiosError(error)\n  else\n    page.onError(error)\n}\n\n// Handler for regular JS errors\npage.onError = error => {\n  console.error(error)\n\n  const content = document.createElement('div')\n  content.innerHTML = `<code>${error.toString()}</code>`\n  return swal({\n    title: 'An error occurred!',\n    icon: 'error',\n    content\n  })\n}\n\n// Handler for Axios errors\npage.onAxiosError = error => {\n  console.error(error)\n\n  // Better Cloudflare errors\n  const cloudflareErrors = {\n    520: 'Unknown Error',\n    521: 'Web Server Is Down',\n    522: 'Connection Timed Out',\n    523: 'Origin Is Unreachable',\n    524: 'A Timeout Occurred',\n    525: 'SSL Handshake Failed',\n    526: 'Invalid SSL Certificate',\n    527: 'Railgun Error',\n    530: 'Origin DNS Error'\n  }\n\n  const statusText = cloudflareErrors[error.response.status] || error.response.statusText\n  const description = error.response.data && error.response.data.description\n    ? error.response.data.description\n    : 'There was an error with the request, please check the console for more information.'\n\n  return swal(`${error.response.status} ${statusText}`, description, 'error')\n}\n\npage.checkIfPublic = () => {\n  let renderShown = false\n  return axios.get('api/check', {\n    onDownloadProgress: () => {\n      // Only show render after this request has been initiated\n      if (!renderShown && typeof page.doRender === 'function') {\n        page.doRender()\n        renderShown = true\n      }\n    }\n  }).then(response => {\n    page.private = response.data.private\n    page.enableUserAccounts = response.data.enableUserAccounts\n    page.maxSize = parseInt(response.data.maxSize)\n    page.maxSizeBytes = page.maxSize * 1e6\n    page.chunkSize = parseInt(response.data.chunkSize)\n    page.temporaryUploadAges = response.data.temporaryUploadAges\n    page.fileIdentifierLength = response.data.fileIdentifierLength\n    return page.preparePage()\n  }).catch(page.onInitError)\n}\n\npage.preparePage = () => {\n  if (page.private)\n    if (page.token) {\n      return page.verifyToken(page.token, true)\n    } else {\n      const button = document.querySelector('#loginToUpload')\n      button.href = 'auth'\n      button.classList.remove('is-loading')\n      if (page.enableUserAccounts)\n        button.innerText = 'Anonymous upload is disabled. Log in to upload.'\n      else\n        button.innerText = 'Running in private mode. Log in to upload.'\n    }\n  else\n    return page.prepareUpload()\n}\n\npage.verifyToken = (token, reloadOnError) => {\n  return axios.post('api/tokens/verify', { token }).then(response => {\n    if (response.data.success === false)\n      return swal({\n        title: 'An error occurred!',\n        text: response.data.description,\n        icon: 'error'\n      }).then(() => {\n        if (!reloadOnError) return\n        localStorage.removeItem('token')\n        location.reload()\n      })\n\n    localStorage[lsKeys.token] = token\n    page.token = token\n    return page.prepareUpload()\n  }).catch(page.onInitError)\n}\n\npage.prepareUpload = () => {\n  // I think this fits best here because we need to check for a valid token before we can get the albums\n  if (page.token) {\n    // Display the album selection\n    document.querySelector('#albumDiv').classList.remove('is-hidden')\n\n    page.albumSelect = document.querySelector('#albumSelect')\n    page.albumSelect.addEventListener('change', () => {\n      page.album = parseInt(page.albumSelect.value)\n      // Re-generate ShareX config file\n      if (typeof page.prepareShareX === 'function')\n        page.prepareShareX()\n    })\n\n    // Fetch albums\n    page.fetchAlbums()\n  }\n\n  // Prepare & generate config tab\n  page.prepareUploadConfig()\n\n  // Update elements wherever applicable\n  document.querySelector('#maxSize > span').innerHTML = page.getPrettyBytes(page.maxSizeBytes)\n  document.querySelector('#loginToUpload').classList.add('is-hidden')\n\n  if (!page.token && page.enableUserAccounts)\n    document.querySelector('#loginLinkText').innerHTML = 'Create an account and keep track of your uploads'\n\n  // Prepare & generate files upload tab\n  page.prepareDropzone()\n\n  // Generate ShareX config file\n  if (typeof page.prepareShareX === 'function')\n    page.prepareShareX()\n\n  // Prepare urls upload tab\n  const urlMaxSize = document.querySelector('#urlMaxSize')\n  if (urlMaxSize) {\n    page.urlMaxSize = parseInt(urlMaxSize.innerHTML)\n    page.urlMaxSizeBytes = page.urlMaxSize * 1e6\n    urlMaxSize.innerHTML = page.getPrettyBytes(page.urlMaxSizeBytes)\n    document.querySelector('#uploadUrls').addEventListener('click', event => {\n      page.addUrlsToQueue()\n    })\n  }\n\n  // Get all tabs\n  const tabsContainer = document.querySelector('#tabs')\n  const tabs = tabsContainer.querySelectorAll('li')\n  for (let i = 0; i < tabs.length; i++) {\n    const id = tabs[i].dataset.id\n    const tabContent = document.querySelector(`#${id}`)\n    if (!tabContent) continue\n\n    tabs[i].addEventListener('click', () => {\n      page.setActiveTab(i)\n    })\n    page.tabs.push({ tab: tabs[i], content: tabContent })\n  }\n\n  // Set first valid tab as the default active tab\n  if (page.tabs.length) {\n    page.setActiveTab(0)\n    tabsContainer.classList.remove('is-hidden')\n  }\n}\n\npage.setActiveTab = index => {\n  for (let i = 0; i < page.tabs.length; i++)\n    if (i === index) {\n      page.tabs[i].tab.classList.add('is-active')\n      page.tabs[i].content.classList.remove('is-hidden')\n      page.activeTab = index\n    } else {\n      page.tabs[i].tab.classList.remove('is-active')\n      page.tabs[i].content.classList.add('is-hidden')\n    }\n}\n\npage.fetchAlbums = () => {\n  return axios.get('api/albums', { headers: { token: page.token } }).then(response => {\n    if (response.data.success === false)\n      return swal('An error occurred!', response.data.description, 'error')\n\n    // Create an option for each album\n    if (Array.isArray(response.data.albums) && response.data.albums.length)\n      for (let i = 0; i < response.data.albums.length; i++) {\n        const album = response.data.albums[i]\n        const option = document.createElement('option')\n        option.value = album.id\n        option.innerHTML = album.name\n        page.albumSelect.appendChild(option)\n      }\n  }).catch(page.onInitError)\n}\n\npage.prepareDropzone = () => {\n  // Parse template element\n  const previewNode = document.querySelector('#tpl')\n  page.previewTemplate = previewNode.innerHTML\n  previewNode.parentNode.removeChild(previewNode)\n\n  // Generate files upload tab\n  const tabDiv = document.querySelector('#tab-files')\n  const div = document.createElement('div')\n  div.className = 'control is-expanded'\n  div.innerHTML = `\n    <div id=\"dropzone\" class=\"button is-danger is-outlined is-fullwidth is-unselectable\">\n      <span class=\"icon\">\n        <i class=\"icon-upload-cloud\"></i>\n      </span>\n      <span>Click here or drag & drop files</span>\n    </div>\n  `\n  tabDiv.querySelector('.dz-container').appendChild(div)\n\n  const previewsContainer = tabDiv.querySelector('#tab-files .field.uploads')\n\n  page.dropzone = new Dropzone(document.body, {\n    url: 'api/upload',\n    paramName: 'files[]',\n    clickable: tabDiv.querySelector('#dropzone'),\n    maxFilesize: page.maxSizeBytes / 1024 / 1024, // this option expects MiB\n    parallelUploads: page.parallelUploads,\n    uploadMultiple: false,\n    previewsContainer,\n    previewTemplate: page.previewTemplate,\n    createImageThumbnails: false,\n    autoProcessQueue: true,\n    headers: { token: page.token },\n    chunking: Boolean(page.chunkSize),\n    chunkSize: page.chunkSize * 1e6, // this option expects Bytes\n    parallelChunkUploads: false, // for now, enabling this breaks descriptive upload progress\n    timeout: 0,\n\n    init () {\n      this.on('addedfile', file => {\n        // Set active tab to file uploads, if necessary\n        if (page.activeTab !== 0)\n          page.setActiveTab(0)\n\n        // Add file entry\n        tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n\n        file.previewElement.querySelector('.name').innerHTML = file.name\n        file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\n      })\n\n      this.on('sending', (file, xhr) => {\n        // Add timeout listener (hacky method due to lack of built-in timeout handler)\n        if (!xhr.ontimeout)\n          xhr.ontimeout = () => {\n            const instances = page.dropzone.getUploadingFiles()\n              .filter(instance => instance.xhr === xhr)\n            page.dropzone._handleUploadError(instances, xhr, 'Connection timed out. Try to reduce upload chunk size.')\n          }\n\n        // Add start timestamp of upload attempt\n        if (xhr._start === undefined)\n          xhr._start = Date.now()\n\n        // If not chunked uploads, add extra headers\n        if (!file.upload.chunked) {\n          if (page.album !== null) xhr.setRequestHeader('albumid', page.album)\n          if (page.fileLength !== null) xhr.setRequestHeader('filelength', page.fileLength)\n          if (page.uploadAge !== null) xhr.setRequestHeader('age', page.uploadAge)\n        }\n\n        if (!file.upload.chunked)\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Uploading\\u2026'\n        else if (file.upload.chunks.length === 1)\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = `Uploading chunk 1/${file.upload.totalChunkCount}\\u2026`\n      })\n\n      // Update descriptive progress\n      this.on('uploadprogress', (file, progress) => {\n        // Total bytes will eventually be bigger than file size when chunked\n        const total = Math.max(file.size, file.upload.total)\n        const percentage = (file.upload.bytesSent / total * 100).toFixed(0)\n\n        const upl = file.upload.chunked\n          ? file.upload.chunks[file.upload.chunks.length - 1]\n          : file.upload\n        const xhr = upl.xhr || file.xhr\n\n        let prefix = 'Uploading\\u2026'\n        let skipProgress = false\n        if (file.upload.chunked) {\n          const done = upl.bytesSent === upl.total\n          const last = file.upload.chunks.length === file.upload.totalChunkCount\n          let chunkIndex = file.upload.chunks.length\n          if (done && !last) {\n            chunkIndex++\n            skipProgress = true\n          }\n          prefix = `Uploading chunk ${chunkIndex}/${file.upload.totalChunkCount}\\u2026`\n        }\n\n        let prettyBytesPerSec\n        if (!skipProgress) {\n          const elapsed = (Date.now() - xhr._start) / 1000\n          const bytesPerSec = elapsed ? (upl.bytesSent / elapsed) : 0\n          prettyBytesPerSec = page.getPrettyBytes(bytesPerSec)\n        }\n\n        file.previewElement.querySelector('.descriptive-progress').innerHTML =\n          `${prefix} ${percentage}%${prettyBytesPerSec ? ` at ~${prettyBytesPerSec}/s` : ''}`\n      })\n\n      this.on('success', (file, data) => {\n        if (!data) return\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        if (data.success === false) {\n          file.previewElement.querySelector('.error').innerHTML = data.description\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\n        }\n\n        if (Array.isArray(data.files) && data.files[0])\n          page.updateTemplate(file, data.files[0])\n      })\n\n      this.on('error', (file, error) => {\n        // Clean up file size errors\n        if ((typeof error === 'string' && /^File is too big/.test(error)) ||\n          (typeof error === 'object' && /File too large/.test(error.description)))\n          error = `File too large (${page.getPrettyBytes(file.size)}).`\n\n        page.updateTemplateIcon(file.previewElement, 'icon-block')\n\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        file.previewElement.querySelector('.error').innerHTML = error.description || error\n        file.previewElement.querySelector('.error').classList.remove('is-hidden')\n      })\n    },\n\n    chunksUploaded (file, done) {\n      file.previewElement.querySelector('.descriptive-progress').innerHTML =\n        `Rebuilding ${file.upload.totalChunkCount} chunks\\u2026`\n\n      return axios.post('api/upload/finishchunks', {\n        // This API supports an array of multiple files\n        files: [{\n          uuid: file.upload.uuid,\n          original: file.name,\n          type: file.type,\n          albumid: page.album,\n          filelength: page.fileLength,\n          age: page.uploadAge\n        }]\n      }, {\n        headers: {\n          token: page.token\n        }\n      }).catch(error => {\n        // Format error for display purpose\n        return error.response.data ? error.response : {\n          data: {\n            success: false,\n            description: error.toString()\n          }\n        }\n      }).then(response => {\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n        if (response.data.success === false) {\n          file.previewElement.querySelector('.error').innerHTML = response.data.description\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\n        }\n\n        if (response.data.files && response.data.files[0])\n          page.updateTemplate(file, response.data.files[0])\n\n        return done()\n      })\n    }\n  })\n}\n\npage.addUrlsToQueue = () => {\n  const urls = document.querySelector('#urls').value\n    .split(/\\r?\\n/)\n    .filter(url => {\n      return url.trim().length\n    })\n\n  if (!urls.length)\n    return swal('An error occurred!', 'You have not entered any URLs.', 'error')\n\n  const tabDiv = document.querySelector('#tab-urls')\n  tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n\n  for (let i = 0; i < urls.length; i++) {\n    const previewTemplate = document.createElement('template')\n    previewTemplate.innerHTML = page.previewTemplate.trim()\n\n    const previewElement = previewTemplate.content.firstChild\n    previewElement.querySelector('.name').innerHTML = urls[i]\n    previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\n\n    const previewsContainer = tabDiv.querySelector('.uploads')\n    previewsContainer.appendChild(previewElement)\n\n    page.urlsQueue.push({\n      url: urls[i],\n      previewElement\n    })\n  }\n\n  page.processUrlsQueue()\n  document.querySelector('#urls').value = ''\n}\n\npage.processUrlsQueue = () => {\n  if (!page.urlsQueue.length) return\n\n  function finishedUrlUpload (file, data) {\n    file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\n\n    if (data.success === false) {\n      const match = data.description.match(/ over limit: (\\d+)$/)\n      if (match && match[1])\n        data.description = `File exceeded limit of ${page.getPrettyBytes(match[1])}.`\n\n      file.previewElement.querySelector('.error').innerHTML = data.description\n      file.previewElement.querySelector('.error').classList.remove('is-hidden')\n    }\n\n    if (Array.isArray(data.files) && data.files[0])\n      page.updateTemplate(file, data.files[0])\n\n    page.activeUrlsQueue--\n    return shiftQueue()\n  }\n\n  function initUrlUpload (file) {\n    file.previewElement.querySelector('.descriptive-progress').innerHTML =\n      'Waiting for server to fetch URL\\u2026'\n\n    return axios.post('api/upload', {\n      urls: [file.url]\n    }, {\n      headers: {\n        token: page.token,\n        albumid: page.album,\n        age: page.uploadAge,\n        filelength: page.fileLength\n      }\n    }).catch(error => {\n      // Format error for display purpose\n      return error.response.data ? error.response : {\n        data: {\n          success: false,\n          description: error.toString()\n        }\n      }\n    }).then(response => {\n      return finishedUrlUpload(file, response.data)\n    })\n  }\n\n  function shiftQueue () {\n    while (page.urlsQueue.length && (page.activeUrlsQueue < page.parallelUploads)) {\n      page.activeUrlsQueue++\n      initUrlUpload(page.urlsQueue.shift())\n    }\n  }\n\n  return shiftQueue()\n}\n\npage.updateTemplateIcon = (templateElement, iconClass) => {\n  const iconElement = templateElement.querySelector('.icon')\n  if (!iconElement) return\n\n  iconElement.classList.add(iconClass)\n  iconElement.classList.remove('is-hidden')\n}\n\npage.updateTemplate = (file, response) => {\n  if (!response.url) return\n\n  const link = file.previewElement.querySelector('.link')\n  const a = link.querySelector('a')\n  const clipboard = file.previewElement.querySelector('.clipboard-mobile > .clipboard-js')\n  a.href = a.innerHTML = clipboard.dataset.clipboardText = response.url\n\n  link.classList.remove('is-hidden')\n  clipboard.parentElement.classList.remove('is-hidden')\n\n  const exec = /.[\\w]+(\\?|$)/.exec(response.url)\n  const extname = exec && exec[0]\n    ? exec[0].toLowerCase()\n    : null\n\n  if (page.imageExts.includes(extname))\n    if (page.previewImages) {\n      const img = file.previewElement.querySelector('img')\n      img.setAttribute('alt', response.name || '')\n      img.dataset.src = response.url\n      img.classList.remove('is-hidden')\n      img.onerror = event => {\n        // Hide image elements that fail to load\n        // Consequently include WEBP in browsers that do not have WEBP support (e.i. IE)\n        event.currentTarget.classList.add('is-hidden')\n        page.updateTemplateIcon(file.previewElement, 'icon-picture')\n      }\n      page.lazyLoad.update(file.previewElement.querySelectorAll('img'))\n    } else {\n      page.updateTemplateIcon(file.previewElement, 'icon-picture')\n    }\n  else if (page.videoExts.includes(extname))\n    page.updateTemplateIcon(file.previewElement, 'icon-video')\n  else\n    page.updateTemplateIcon(file.previewElement, 'icon-doc-inv')\n\n  if (response.expirydate) {\n    const expiryDate = file.previewElement.querySelector('.expiry-date')\n    expiryDate.innerHTML = `EXP: ${page.getPrettyDate(new Date(response.expirydate * 1000))}`\n    expiryDate.classList.remove('is-hidden')\n  }\n}\n\npage.createAlbum = () => {\n  const div = document.createElement('div')\n  div.innerHTML = `\n    <div class=\"field\">\n      <div class=\"controls\">\n        <input id=\"swalName\" class=\"input\" type=\"text\" placeholder=\"Name\" maxlength=\"${page.albumTitleMaxLength}\">\n      </div>\n      <p class=\"help\">Max length is ${page.albumTitleMaxLength} characters.</p>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <textarea id=\"swalDescription\" class=\"textarea\" placeholder=\"Description\" rows=\"2\" maxlength=\"${page.albumDescMaxLength}\"></textarea>\n      </div>\n      <p class=\"help\">Max length is ${page.albumDescMaxLength} characters.</p>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalDownload\" type=\"checkbox\" checked>\n          Enable download\n        </label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalPublic\" type=\"checkbox\" checked>\n          Enable public link\n        </label>\n      </div>\n    </div>\n  `\n\n  swal({\n    title: 'Create new album',\n    icon: 'info',\n    content: div,\n    buttons: {\n      cancel: true,\n      confirm: {\n        closeModal: false\n      }\n    }\n  }).then(value => {\n    if (!value) return\n\n    const name = document.querySelector('#swalName').value.trim()\n    axios.post('api/albums', {\n      name,\n      description: document.querySelector('#swalDescription').value.trim(),\n      download: document.querySelector('#swalDownload').checked,\n      public: document.querySelector('#swalPublic').checked\n    }, {\n      headers: {\n        token: page.token\n      }\n    }).then(response => {\n      if (response.data.success === false)\n        return swal('An error occurred!', response.data.description, 'error')\n\n      const option = document.createElement('option')\n      page.albumSelect.appendChild(option)\n      option.value = response.data.id\n      option.innerHTML = name\n      option.selected = true\n\n      swal('Woohoo!', 'Album was created successfully.', 'success')\n    }).catch(page.onError)\n  })\n}\n\npage.prepareUploadConfig = () => {\n  const fallback = {\n    chunkSize: page.chunkSize,\n    parallelUploads: page.parallelUploads\n  }\n\n  const temporaryUploadAges = Array.isArray(page.temporaryUploadAges) && page.temporaryUploadAges.length\n  const fileIdentifierLength = page.fileIdentifierLength &&\n    typeof page.fileIdentifierLength.min === 'number' &&\n    typeof page.fileIdentifierLength.max === 'number'\n\n  const config = {\n    siBytes: {\n      label: 'File size display',\n      select: [\n        { value: 'default', text: '1000 B = 1 kB = 1 Kilobyte' },\n        { value: '0', text: '1024 B = 1 KiB = 1 Kibibyte' }\n      ],\n      help: 'This will be used in our homepage, dashboard, and album public pages.',\n      valueHandler () {} // Do nothing\n    },\n    fileLength: {\n      display: fileIdentifierLength,\n      label: 'File identifier length',\n      number: fileIdentifierLength ? {\n        min: page.fileIdentifierLength.min,\n        max: page.fileIdentifierLength.max,\n        round: true\n      } : undefined,\n      help: true, // true means auto-generated, for number-based configs only\n      disabled: fileIdentifierLength && page.fileIdentifierLength.force\n    },\n    uploadAge: {\n      display: temporaryUploadAges,\n      label: 'Upload age',\n      select: [],\n      help: 'This allows your files to automatically be deleted after a certain period of time.'\n    },\n    chunkSize: {\n      display: !isNaN(page.chunkSize),\n      label: 'Upload chunk size (MB)',\n      number: {\n        min: 1,\n        max: 95,\n        suffix: ' MB',\n        round: true\n      },\n      help: true\n    },\n    parallelUploads: {\n      label: 'Parallel uploads',\n      number: {\n        min: 1,\n        max: 10,\n        round: true\n      },\n      help: true\n    },\n    uploadsHistoryOrder: {\n      label: 'Uploads history order',\n      select: [\n        { value: 'default', text: 'Older files on top' },\n        { value: '0', text: 'Newer files on top' }\n      ],\n      help: `Newer files on top will use <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction#Accessibility_Concerns\" target=\"_blank\" rel=\"noopener\">a CSS technique</a>.<br>\n        Trying to select their texts manually from top to bottom will end up selecting the texts from bottom to top instead.`,\n      valueHandler (value) {\n        if (value === '0') {\n          const uploadFields = document.querySelectorAll('.tab-content > .uploads')\n          for (let i = 0; i < uploadFields.length; i++)\n            uploadFields[i].classList.add('is-reversed')\n        }\n      }\n    },\n    previewImages: {\n      label: 'Load images for preview',\n      select: [\n        { value: 'default', text: 'Yes' },\n        { value: '0', text: 'No' }\n      ],\n      help: 'By default, uploaded images will be loaded as their previews.',\n      valueHandler (value) {\n        page.previewImages = value !== '0'\n      }\n    }\n  }\n\n  if (temporaryUploadAges) {\n    const stored = parseFloat(localStorage[lsKeys.uploadAge])\n    for (let i = 0; i < page.temporaryUploadAges.length; i++) {\n      const age = page.temporaryUploadAges[i]\n      config.uploadAge.select.push({\n        value: i === 0 ? 'default' : String(age),\n        text: page.getPrettyUploadAge(age)\n      })\n      if (age === stored)\n        config.uploadAge.value = stored\n    }\n  }\n\n  if (fileIdentifierLength) {\n    fallback.fileLength = page.fileIdentifierLength.default || undefined\n    const stored = parseInt(localStorage[lsKeys.fileLength])\n    if (!page.fileIdentifierLength.force &&\n      !isNaN(stored) &&\n      stored >= page.fileIdentifierLength.min &&\n      stored <= page.fileIdentifierLength.max)\n      config.fileLength.value = stored\n  }\n\n  const tabContent = document.querySelector('#tab-config')\n  const form = document.createElement('form')\n  form.addEventListener('submit', event => event.preventDefault())\n\n  const configKeys = Object.keys(config)\n  for (let i = 0; i < configKeys.length; i++) {\n    const key = configKeys[i]\n    const conf = config[key]\n\n    // Skip only if display attribute is explicitly set to false\n    if (conf.display === false)\n      continue\n\n    const field = document.createElement('div')\n    field.className = 'field'\n\n    let value\n    if (!conf.disabled) {\n      if (conf.value !== undefined) {\n        value = conf.value\n      } else if (conf.number !== undefined) {\n        const parsed = parseInt(localStorage[lsKeys[key]])\n        if (!isNaN(parsed))\n          value = parsed\n      } else {\n        value = localStorage[lsKeys[key]]\n      }\n\n      // If valueHandler function exists, defer to the function,\n      // otherwise pass value to global page object\n      if (typeof conf.valueHandler === 'function')\n        conf.valueHandler(value)\n      else if (value !== undefined)\n        page[key] = value\n    }\n\n    let control\n    if (Array.isArray(conf.select)) {\n      control = document.createElement('div')\n      control.className = 'select is-fullwidth'\n\n      const opts = []\n      for (let j = 0; j < conf.select.length; j++) {\n        const opt = conf.select[j]\n        const selected = value && (opt.value === String(value))\n        opts.push(`\n          <option value=\"${opt.value}\"${selected ? ' selected' : ''}>\n            ${opt.text}${opt.value === 'default' ? ' (default)' : ''}\n          </option>\n        `)\n      }\n\n      control.innerHTML = `\n        <select id=\"${key}\">\n          ${opts.join('\\n')}\n        </select>\n      `\n    } else if (conf.number !== undefined) {\n      control = document.createElement('input')\n      control.id = control.name = key\n      control.className = 'input is-fullwidth'\n      control.type = 'number'\n\n      if (conf.number.min !== undefined)\n        control.min = conf.number.min\n      if (conf.number.max !== undefined)\n        control.max = conf.number.max\n      if (typeof value === 'number')\n        control.value = value\n      else if (fallback[key] !== undefined)\n        control.value = fallback[key]\n    }\n\n    let help\n    if (conf.disabled) {\n      control.disabled = conf.disabled\n      help = 'This option is currently disabled.'\n    } else if (typeof conf.help === 'string') {\n      help = conf.help\n    } else if (conf.help === true && conf.number !== undefined) {\n      const tmp = []\n\n      if (fallback[key] !== undefined)\n        tmp.push(`Default is ${fallback[key]}${conf.number.suffix || ''}.`)\n      if (conf.number.min !== undefined)\n        tmp.push(`Min is ${conf.number.min}${conf.number.suffix || ''}.`)\n      if (conf.number.max !== undefined)\n        tmp.push(`Max is ${conf.number.max}${conf.number.suffix || ''}.`)\n\n      help = tmp.join(' ')\n    }\n\n    field.innerHTML = `\n      <label class=\"label\">${conf.label}</label>\n      <div class=\"control\"></div>\n      ${help ? `<p class=\"help\">${help}</p>` : ''}\n    `\n    field.querySelector('div.control').appendChild(control)\n\n    form.appendChild(field)\n  }\n\n  const submit = document.createElement('div')\n  submit.className = 'field'\n  submit.innerHTML = `\n    <p class=\"control\">\n      <button id=\"saveConfig\" type=\"submit\" class=\"button is-danger is-outlined is-fullwidth\">\n        <span class=\"icon\">\n          <i class=\"icon-floppy\"></i>\n        </span>\n        <span>Save & reload</span>\n      </button>\n    </p>\n    <p class=\"help\">\n      This configuration will only be used in this browser.<br>\n      After reloading the page, some of them will also be applied to the ShareX config that you can download by clicking on the ShareX icon below.\n    </p>\n  `\n\n  form.appendChild(submit)\n  form.querySelector('#saveConfig').addEventListener('click', () => {\n    if (!form.checkValidity())\n      return\n\n    const keys = Object.keys(config)\n      .filter(key => config[key].display !== false && config[key].disabled !== true)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      let value\n      if (config[key].select !== undefined) {\n        if (form.elements[key].value !== 'default')\n          value = form.elements[key].value\n      } else if (config[key].number !== undefined) {\n        const parsed = parseInt(form.elements[key].value)\n        if (!isNaN(parsed))\n          value = Math.min(Math.max(parsed, config[key].number.min), config[key].number.max)\n      }\n\n      if (value !== undefined && value !== fallback[key])\n        localStorage[lsKeys[key]] = value\n      else\n        localStorage.removeItem(lsKeys[key])\n    }\n\n    swal({\n      title: 'Woohoo!',\n      text: 'Configuration saved into this browser.',\n      icon: 'success'\n    }).then(() => {\n      location.reload()\n    })\n  })\n\n  tabContent.appendChild(form)\n}\n\npage.getPrettyUploadAge = hours => {\n  if (hours === 0) {\n    return 'Permanent'\n  } else if (hours < 1) {\n    const minutes = hours * 60\n    return `${minutes} minute${minutes === 1 ? '' : 's'}`\n  } else if (hours >= 24) {\n    const days = hours / 24\n    return `${days} day${days === 1 ? '' : 's'}`\n  } else {\n    return `${hours} hour${hours === 1 ? '' : 's'}`\n  }\n}\n\n// Handle image paste event\nwindow.addEventListener('paste', event => {\n  const items = (event.clipboardData || event.originalEvent.clipboardData).items\n  const index = Object.keys(items)\n  for (let i = 0; i < index.length; i++) {\n    const item = items[index[i]]\n    if (item.kind === 'file') {\n      const blob = item.getAsFile()\n      /* eslint-disable-next-line compat/compat */\n      const file = new File([blob], `pasted-image.${blob.type.match(/(?:[^/]*\\/)([^;]*)/)[1]}`, {\n        type: blob.type\n      })\n      page.dropzone.addFile(file)\n    }\n  }\n})\n\nwindow.onload = () => {\n  page.checkIfPublic()\n\n  page.clipboardJS = new ClipboardJS('.clipboard-js')\n\n  page.clipboardJS.on('success', () => {\n    return swal('', 'The link has been copied to clipboard.', 'success', {\n      buttons: false,\n      timer: 1500\n    })\n  })\n\n  page.clipboardJS.on('error', page.onError)\n\n  page.lazyLoad = new LazyLoad({\n    elements_selector: '.field.uploads img'\n  })\n\n  document.querySelector('#createAlbum').addEventListener('click', () => {\n    page.createAlbum()\n  })\n}\n"]}