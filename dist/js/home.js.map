{"version":3,"sources":["home.js"],"names":["const","lsKeys","token","chunkSize","parallelUploads","uploadsHistoryOrder","fileLength","uploadAge","page","localStorage","private","enableUserAccounts","maxSize","temporaryUploadAges","fileIdentifierLength","album","maxSizeBytes","urlMaxSize","urlMaxSizeBytes","tabs","activeTab","albumSelect","previewTemplate","dropzone","clipboardJS","lazyLoad","imageExtensions","checkIfPublic","onFailure","axios","get","then","response","data","parseInt","preparePage","catch","prepareUpload","verifyToken","button","document","querySelector","href","classList","remove","innerText","reloadOnError","post","success","swal","title","text","description","icon","removeItem","location","reload","addEventListener","value","prepareShareX","fetchAlbums","prepareUploadConfig","innerHTML","getPrettyBytes","add","prepareDropzone","event","uploadUrls","currentTarget","tabsContainer","querySelectorAll","loop","i","id","dataset","tabContent","setActiveTab","push","tab","content","length","index","let","headers","Array","isArray","albums","option","createElement","name","appendChild","previewNode","parentNode","removeChild","tabDiv","div","className","previewsContainer","Dropzone","body","url","paramName","clickable","maxFilesize","uploadMultiple","createImageThumbnails","autoProcessQueue","chunking","Boolean","parallelChunkUploads","chunksUploaded","file","done","previewElement","setAttribute","files","uuid","upload","original","type","albumid","filelength","age","error","toString","updateTemplate","on","xhr","chunked","setRequestHeader","progress","test","size","updateTemplateIcon","contains","urls","split","filter","trim","join","map","firstChild","posted","result","removeAttribute","run","templateElement","iconClass","iconElement","a","clipboard","clipboardText","parentElement","exec","includes","toLowerCase","img","src","onerror","update","expirydate","expiryDate","getPrettyDate","Date","createAlbum","buttons","cancel","confirm","closeModal","download","checked","public","selected","console","fallback","numConfig","min","max","fileLengthDiv","element","stored","default","helpText","range","force","disabled","isNaN","Object","keys","forEach","key","uploadAgeDiv","parseFloat","getPrettyUploadAge","form","preventDefault","siBytes","uploadFields","checkValidity","prefKeys","elements","numKeys","parsed","Math","hours","minutes","days","window","items","clipboardData","originalEvent","item","kind","blob","getAsFile","File","match","addFile","onload","undefined","uploadButton","statusText","520","521","522","523","524","525","526","527","530","status","ClipboardJS","LazyLoad","elements_selector"],"mappings":"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","file":"home.js","sourcesContent":["/* global swal, axios, Dropzone, ClipboardJS, LazyLoad */\n\nconst lsKeys = {\n  token: 'token',\n  chunkSize: 'chunkSize',\n  parallelUploads: 'parallelUploads',\n  uploadsHistoryOrder: 'uploadsHistoryOrder',\n  fileLength: 'fileLength',\n  uploadAge: 'uploadAge'\n}\n\nconst page = {\n  // user token\n  token: localStorage[lsKeys.token],\n\n  // configs from api/check\n  private: null,\n  enableUserAccounts: null,\n  maxSize: null,\n  chunkSize: null,\n  temporaryUploadAges: null,\n  fileIdentifierLength: null,\n\n  // store album id that will be used with upload requests\n  album: null,\n\n  parallelUploads: null,\n  uploadsHistoryOrder: null,\n  fileLength: null,\n  uploadAge: null,\n\n  maxSizeBytes: null,\n  urlMaxSize: null,\n  urlMaxSizeBytes: null,\n\n  tabs: [],\n  activeTab: null,\n  albumSelect: null,\n  previewTemplate: null,\n\n  dropzone: null,\n  clipboardJS: null,\n  lazyLoad: null,\n\n  imageExtensions: ['.webp', '.jpg', '.jpeg', '.bmp', '.gif', '.png', '.svg']\n}\n\npage.checkIfPublic = onFailure => {\n  return axios.get('api/check')\n    .then(response => {\n      page.private = response.data.private\n      page.enableUserAccounts = response.data.enableUserAccounts\n      page.maxSize = parseInt(response.data.maxSize)\n      page.maxSizeBytes = page.maxSize * 1e6\n      page.chunkSize = parseInt(response.data.chunkSize)\n      page.temporaryUploadAges = response.data.temporaryUploadAges\n      page.fileIdentifierLength = response.data.fileIdentifierLength\n      return page.preparePage(onFailure)\n    })\n    .catch(onFailure)\n}\n\npage.preparePage = onFailure => {\n  if (page.private)\n    if (page.token) {\n      return page.verifyToken(page.token, onFailure, true)\n    } else {\n      const button = document.querySelector('#loginToUpload')\n      button.href = 'auth'\n      button.classList.remove('is-loading')\n      if (page.enableUserAccounts)\n        button.innerText = 'Anonymous upload is disabled. Log in to upload.'\n      else\n        button.innerText = 'Running in private mode. Log in to upload.'\n    }\n  else\n    return page.prepareUpload(onFailure)\n}\n\npage.verifyToken = (token, onFailure, reloadOnError) => {\n  return axios.post('api/tokens/verify', { token }).then(response => {\n    if (response.data.success === false)\n      return swal({\n        title: 'An error occurred!',\n        text: response.data.description,\n        icon: 'error'\n      }).then(() => {\n        if (!reloadOnError) return\n        localStorage.removeItem('token')\n        location.reload()\n      })\n\n    localStorage.token = token\n    page.token = token\n    return page.prepareUpload(onFailure)\n  }).catch(onFailure)\n}\n\npage.prepareUpload = onFailure => {\n  // I think this fits best here because we need to check for a valid token before we can get the albums\n  if (page.token) {\n    // Display the album selection\n    document.querySelector('#albumDiv').classList.remove('is-hidden')\n\n    page.albumSelect = document.querySelector('#albumSelect')\n    page.albumSelect.addEventListener('change', () => {\n      page.album = parseInt(page.albumSelect.value)\n      // Re-generate ShareX config file\n      if (typeof page.prepareShareX === 'function')\n        page.prepareShareX()\n    })\n\n    // Fetch albums\n    page.fetchAlbums(onFailure)\n  }\n\n  // Prepare & generate config tab\n  page.prepareUploadConfig()\n\n  // Update elements wherever applicable\n  document.querySelector('#maxSize > span').innerHTML = page.getPrettyBytes(page.maxSizeBytes)\n  document.querySelector('#loginToUpload').classList.add('is-hidden')\n\n  if (!page.token && page.enableUserAccounts)\n    document.querySelector('#loginLinkText').innerHTML = 'Create an account and keep track of your uploads'\n\n  // Prepare & generate files upload tab\n  page.prepareDropzone()\n\n  // Generate ShareX config file\n  if (typeof page.prepareShareX === 'function')\n    page.prepareShareX()\n\n  // Prepare urls upload tab\n  const urlMaxSize = document.querySelector('#urlMaxSize')\n  if (urlMaxSize) {\n    page.urlMaxSize = parseInt(urlMaxSize.innerHTML)\n    page.urlMaxSizeBytes = page.urlMaxSize * 1e6\n    urlMaxSize.innerHTML = page.getPrettyBytes(page.urlMaxSizeBytes)\n    document.querySelector('#uploadUrls').addEventListener('click', event => {\n      page.uploadUrls(event.currentTarget)\n    })\n  }\n\n  // Get all tabs\n  const tabsContainer = document.querySelector('#tabs')\n  const tabs = tabsContainer.querySelectorAll('li')\n  for (let i = 0; i < tabs.length; i++) {\n    const id = tabs[i].dataset.id\n    const tabContent = document.querySelector(`#${id}`)\n    if (!tabContent) continue\n\n    tabs[i].addEventListener('click', () => {\n      page.setActiveTab(i)\n    })\n    page.tabs.push({ tab: tabs[i], content: tabContent })\n  }\n\n  // Set first valid tab as the default active tab\n  if (page.tabs.length) {\n    page.setActiveTab(0)\n    tabsContainer.classList.remove('is-hidden')\n  }\n}\n\npage.setActiveTab = index => {\n  for (let i = 0; i < page.tabs.length; i++)\n    if (i === index) {\n      page.tabs[i].tab.classList.add('is-active')\n      page.tabs[i].content.classList.remove('is-hidden')\n      page.activeTab = index\n    } else {\n      page.tabs[i].tab.classList.remove('is-active')\n      page.tabs[i].content.classList.add('is-hidden')\n    }\n}\n\npage.fetchAlbums = onFailure => {\n  return axios.get('api/albums', { headers: { token: page.token } }).then(response => {\n    if (response.data.success === false)\n      return swal('An error occurred!', response.data.description, 'error')\n\n    // Create an option for each album\n    if (Array.isArray(response.data.albums) && response.data.albums.length)\n      for (let i = 0; i < response.data.albums.length; i++) {\n        const album = response.data.albums[i]\n        const option = document.createElement('option')\n        option.value = album.id\n        option.innerHTML = album.name\n        page.albumSelect.appendChild(option)\n      }\n  }).catch(onFailure)\n}\n\npage.prepareDropzone = () => {\n  // Parse template element\n  const previewNode = document.querySelector('#tpl')\n  page.previewTemplate = previewNode.innerHTML\n  previewNode.parentNode.removeChild(previewNode)\n\n  // Generate files upload tab\n  const tabDiv = document.querySelector('#tab-files')\n  const div = document.createElement('div')\n  div.className = 'control is-expanded'\n  div.innerHTML = `\n    <div id=\"dropzone\" class=\"button is-danger is-fullwidth is-unselectable\">\n      <span class=\"icon\">\n        <i class=\"icon-upload-cloud\"></i>\n      </span>\n      <span>Click here or drag & drop files</span>\n    </div>\n  `\n  tabDiv.querySelector('.dz-container').appendChild(div)\n\n  const previewsContainer = tabDiv.querySelector('#tab-files .field.uploads')\n\n  page.dropzone = new Dropzone(document.body, {\n    url: 'api/upload',\n    paramName: 'files[]',\n    clickable: tabDiv.querySelector('#dropzone'),\n    maxFilesize: page.maxSizeBytes / 1024 / 1024, // this option expects MiB\n    parallelUploads: page.parallelUploads,\n    uploadMultiple: false,\n    previewsContainer,\n    previewTemplate: page.previewTemplate,\n    createImageThumbnails: false,\n    autoProcessQueue: true,\n    headers: { token: page.token },\n    chunking: Boolean(page.chunkSize),\n    chunkSize: page.chunkSize * 1e6, // the option below expects Bytes\n    parallelChunkUploads: false, // when set to true, it often hangs with hundreds of parallel uploads\n    chunksUploaded (file, done) {\n      file.previewElement.querySelector('.progress').setAttribute('value', 100)\n      file.previewElement.querySelector('.progress').innerHTML = '100%'\n\n      return axios.post('api/upload/finishchunks', {\n        // This API supports an array of multiple files\n        files: [{\n          uuid: file.upload.uuid,\n          original: file.name,\n          type: file.type,\n          albumid: page.album,\n          filelength: page.fileLength,\n          age: page.uploadAge\n        }]\n      }, { headers: { token: page.token } }).catch(error => {\n        // Format error for display purpose\n        return error.response.data ? error.response : {\n          data: {\n            success: false,\n            description: error.toString()\n          }\n        }\n      }).then(response => {\n        file.previewElement.querySelector('.progress').classList.add('is-hidden')\n\n        if (response.data.success === false)\n          file.previewElement.querySelector('.error').innerHTML = response.data.description\n\n        if (response.data.files && response.data.files[0])\n          page.updateTemplate(file, response.data.files[0])\n\n        return done()\n      })\n    }\n  })\n\n  page.dropzone.on('addedfile', file => {\n    // Set active tab to file uploads, if necessary\n    if (page.activeTab !== 0)\n      page.setActiveTab(0)\n    // Add file entry\n    tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n    file.previewElement.querySelector('.name').innerHTML = file.name\n  })\n\n  page.dropzone.on('sending', (file, xhr) => {\n    if (file.upload.chunked) return\n    // Add headers if not uploading chunks\n    if (page.album !== null) xhr.setRequestHeader('albumid', page.album)\n    if (page.fileLength !== null) xhr.setRequestHeader('filelength', page.fileLength)\n    if (page.uploadAge !== null) xhr.setRequestHeader('age', page.uploadAge)\n  })\n\n  // Update the total progress bar\n  page.dropzone.on('uploadprogress', (file, progress) => {\n    // For some reason, chunked uploads fire 100% progress event\n    // for each chunk's successful uploads\n    if (file.upload.chunked && progress === 100) return\n    file.previewElement.querySelector('.progress').setAttribute('value', progress)\n    file.previewElement.querySelector('.progress').innerHTML = `${progress}%`\n  })\n\n  page.dropzone.on('success', (file, response) => {\n    if (!response) return\n    file.previewElement.querySelector('.progress').classList.add('is-hidden')\n\n    if (response.success === false)\n      file.previewElement.querySelector('.error').innerHTML = response.description\n\n    if (response.files && response.files[0])\n      page.updateTemplate(file, response.files[0])\n  })\n\n  page.dropzone.on('error', (file, error) => {\n    // Clean up file size errors\n    if ((typeof error === 'string' && /^File is too big/.test(error)) ||\n      (typeof error === 'object' && /File too large/.test(error.description)))\n      error = `File too large (${page.getPrettyBytes(file.size)}).`\n\n    page.updateTemplateIcon(file.previewElement, 'icon-block')\n    file.previewElement.querySelector('.progress').classList.add('is-hidden')\n    file.previewElement.querySelector('.name').innerHTML = file.name\n    file.previewElement.querySelector('.error').innerHTML = error.description || error\n  })\n}\n\npage.uploadUrls = button => {\n  const tabDiv = document.querySelector('#tab-urls')\n  if (!tabDiv || button.classList.contains('is-loading'))\n    return\n\n  button.classList.add('is-loading')\n\n  function done (error) {\n    if (error) swal('An error occurred!', error, 'error')\n    button.classList.remove('is-loading')\n  }\n\n  function run () {\n    const headers = {\n      token: page.token,\n      albumid: page.album,\n      age: page.uploadAge,\n      filelength: page.fileLength\n    }\n\n    const previewsContainer = tabDiv.querySelector('.uploads')\n    const urls = document.querySelector('#urls').value\n      .split(/\\r?\\n/)\n      .filter(url => {\n        return url.trim().length\n      })\n    document.querySelector('#urls').value = urls.join('\\n')\n\n    if (!urls.length)\n      return done('You have not entered any URLs.')\n\n    tabDiv.querySelector('.uploads').classList.remove('is-hidden')\n    const files = urls.map(url => {\n      const previewTemplate = document.createElement('template')\n      previewTemplate.innerHTML = page.previewTemplate.trim()\n      const previewElement = previewTemplate.content.firstChild\n      previewElement.querySelector('.name').innerHTML = url\n      previewsContainer.appendChild(previewElement)\n      return { url, previewElement }\n    })\n\n    function post (i) {\n      if (i === files.length)\n        return done()\n\n      function posted (result) {\n        files[i].previewElement.querySelector('.progress').classList.add('is-hidden')\n        if (result.success) {\n          page.updateTemplate(files[i], result.files[0])\n        } else {\n          page.updateTemplateIcon(files[i].previewElement, 'icon-block')\n          files[i].previewElement.querySelector('.error').innerHTML = result.description\n        }\n        return post(i + 1)\n      }\n\n      // Animate progress bar\n      files[i].previewElement.querySelector('.progress').removeAttribute('value')\n\n      return axios.post('api/upload', { urls: [files[i].url] }, { headers }).then(response => {\n        return posted(response.data)\n      }).catch(error => {\n        return posted({\n          success: false,\n          description: error.response ? error.response.data.description : error.toString()\n        })\n      })\n    }\n    return post(0)\n  }\n  return run()\n}\n\npage.updateTemplateIcon = (templateElement, iconClass) => {\n  const iconElement = templateElement.querySelector('.icon')\n  if (!iconElement) return\n  iconElement.classList.add(iconClass)\n  iconElement.classList.remove('is-hidden')\n}\n\npage.updateTemplate = (file, response) => {\n  if (!response.url) return\n\n  const a = file.previewElement.querySelector('.link > a')\n  const clipboard = file.previewElement.querySelector('.clipboard-mobile > .clipboard-js')\n  a.href = a.innerHTML = clipboard.dataset.clipboardText = response.url\n  clipboard.parentElement.classList.remove('is-hidden')\n\n  const exec = /.[\\w]+(\\?|$)/.exec(response.url)\n  if (exec && exec[0] && page.imageExtensions.includes(exec[0].toLowerCase())) {\n    const img = file.previewElement.querySelector('img')\n    img.setAttribute('alt', response.name || '')\n    img.dataset.src = response.url\n    img.classList.remove('is-hidden')\n    img.onerror = event => {\n      // Hide image elements that fail to load\n      // Consequently include WEBP in browsers that do not have WEBP support (e.i. IE)\n      event.currentTarget.classList.add('is-hidden')\n      page.updateTemplateIcon(file.previewElement, 'icon-picture')\n    }\n    page.lazyLoad.update(file.previewElement.querySelectorAll('img'))\n  } else {\n    page.updateTemplateIcon(file.previewElement, 'icon-doc-inv')\n  }\n\n  if (response.expirydate) {\n    const expiryDate = file.previewElement.querySelector('.expiry-date')\n    expiryDate.innerHTML = `Expiry date: ${page.getPrettyDate(new Date(response.expirydate * 1000))}`\n    expiryDate.classList.remove('is-hidden')\n  }\n}\n\npage.createAlbum = () => {\n  const div = document.createElement('div')\n  div.innerHTML = `\n    <div class=\"field\">\n      <div class=\"controls\">\n        <input id=\"swalName\" class=\"input\" type=\"text\" placeholder=\"Name\">\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <textarea id=\"swalDescription\" class=\"textarea\" placeholder=\"Description\" rows=\"2\"></textarea>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalDownload\" type=\"checkbox\" checked>\n          Enable download\n        </label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n          <input id=\"swalPublic\" type=\"checkbox\" checked>\n          Enable public link\n        </label>\n      </div>\n    </div>\n  `\n\n  swal({\n    title: 'Create new album',\n    icon: 'info',\n    content: div,\n    buttons: {\n      cancel: true,\n      confirm: {\n        closeModal: false\n      }\n    }\n  }).then(value => {\n    if (!value) return\n\n    const name = document.querySelector('#swalName').value.trim()\n    axios.post('api/albums', {\n      name,\n      description: document.querySelector('#swalDescription').value.trim(),\n      download: document.querySelector('#swalDownload').checked,\n      public: document.querySelector('#swalPublic').checked\n    }, {\n      headers: {\n        token: page.token\n      }\n    }).then(response => {\n      if (response.data.success === false)\n        return swal('An error occurred!', response.data.description, 'error')\n\n      const option = document.createElement('option')\n      page.albumSelect.appendChild(option)\n      option.value = response.data.id\n      option.innerHTML = name\n      option.selected = true\n\n      swal('Woohoo!', 'Album was created successfully.', 'success')\n    }).catch(error => {\n      console.error(error)\n      return swal('An error occurred!', 'There was an error with the request, please check the console for more information.', 'error')\n    })\n  })\n}\n\npage.prepareUploadConfig = () => {\n  const fallback = {\n    chunkSize: page.chunkSize,\n    parallelUploads: 2\n  }\n\n  page.chunkSize = parseInt(localStorage[lsKeys.chunkSize]) || fallback.chunkSize\n  page.parallelUploads = parseInt(localStorage[lsKeys.parallelUploads]) || fallback.parallelUploads\n  document.querySelector('#chunkSize').value = page.chunkSize\n  document.querySelector('#parallelUploads').value = page.parallelUploads\n\n  const numConfig = {\n    chunkSize: { min: 1, max: 95 },\n    parallelUploads: { min: 1, max: 8 }\n  }\n\n  document.querySelector('#chunkSizeDiv .help').innerHTML =\n    `Default is ${fallback.chunkSize} MB. Max is ${numConfig.chunkSize.max} MB.`\n  document.querySelector('#parallelUploadsDiv .help').innerHTML =\n    `Default is ${fallback.parallelUploads}. Max is ${numConfig.parallelUploads.max}.`\n\n  const fileLengthDiv = document.querySelector('#fileLengthDiv')\n  if (page.fileIdentifierLength && fileLengthDiv) {\n    const element = document.querySelector('#fileLength')\n    const stored = parseInt(localStorage[lsKeys.fileLength])\n\n    fallback.fileLength = page.fileIdentifierLength.default\n    let helpText = `Default is ${page.fileIdentifierLength.default}.`\n\n    const range = typeof page.fileIdentifierLength.min === 'number' &&\n      typeof page.fileIdentifierLength.max === 'number'\n\n    if (range) {\n      helpText += ` Min is ${page.fileIdentifierLength.min}. Max is ${page.fileIdentifierLength.max}`\n      numConfig.fileLength = {\n        min: page.fileIdentifierLength.min,\n        max: page.fileIdentifierLength.max\n      }\n    }\n\n    if (page.fileIdentifierLength.force) {\n      helpText += ' This option is currently disabled.'\n      element.disabled = true\n    }\n\n    if (page.fileIdentifierLength.force ||\n      isNaN(stored) ||\n      !range ||\n      stored < page.fileIdentifierLength.min ||\n      stored > page.fileIdentifierLength.max) {\n      element.value = fallback.fileLength\n      page.fileLength = null\n    } else {\n      element.value = stored\n      page.fileLength = stored\n    }\n\n    fileLengthDiv.classList.remove('is-hidden')\n    fileLengthDiv.querySelector('.help').innerHTML = helpText\n  }\n\n  Object.keys(numConfig).forEach(key => {\n    document.querySelector(`#${key}`).setAttribute('min', numConfig[key].min)\n    document.querySelector(`#${key}`).setAttribute('max', numConfig[key].max)\n  })\n\n  const uploadAgeDiv = document.querySelector('#uploadAgeDiv')\n  if (Array.isArray(page.temporaryUploadAges) && page.temporaryUploadAges.length && uploadAgeDiv) {\n    const element = document.querySelector('#uploadAge')\n    const stored = parseFloat(localStorage[lsKeys.uploadAge])\n    for (let i = 0; i < page.temporaryUploadAges.length; i++) {\n      const age = page.temporaryUploadAges[i]\n      const option = document.createElement('option')\n      option.value = i === 0 ? 'default' : age\n      option.innerHTML = page.getPrettyUploadAge(age) +\n        (i === 0 ? ' (default)' : '')\n      element.appendChild(option)\n      if (age === stored) {\n        element.value = option.value\n        page.uploadAge = stored\n      }\n    }\n    uploadAgeDiv.classList.remove('is-hidden')\n  }\n\n  const tabContent = document.querySelector('#tab-config')\n  const form = tabContent.querySelector('form')\n  form.addEventListener('submit', event => {\n    event.preventDefault()\n  })\n\n  const siBytes = localStorage[lsKeys.siBytes] !== '0'\n  if (!siBytes) document.querySelector('#siBytes').value = '0'\n\n  const olderOnTop = localStorage[lsKeys.uploadsHistoryOrder] !== '0'\n  if (!olderOnTop) {\n    document.querySelector('#uploadsHistoryOrder').value = '0'\n    const uploadFields = document.querySelectorAll('.tab-content > .uploads')\n    for (let i = 0; i < uploadFields.length; i++)\n      uploadFields[i].classList.add('is-reversed')\n  }\n\n  document.querySelector('#saveConfig').addEventListener('click', () => {\n    if (!form.checkValidity())\n      return\n\n    const prefKeys = ['siBytes', 'uploadsHistoryOrder', 'uploadAge']\n    for (let i = 0; i < prefKeys.length; i++) {\n      const value = form.elements[prefKeys[i]].value\n      if (value !== 'default' && value !== fallback[prefKeys[i]])\n        localStorage[lsKeys[prefKeys[i]]] = value\n      else\n        localStorage.removeItem(lsKeys[prefKeys[i]])\n    }\n\n    const numKeys = Object.keys(numConfig)\n    for (let i = 0; i < numKeys.length; i++) {\n      const parsed = parseInt(form.elements[numKeys[i]].value) || 0\n      const value = Math.min(Math.max(parsed, numConfig[numKeys[i]].min), numConfig[numKeys[i]].max)\n      if (value > 0 && value !== fallback[numKeys[i]])\n        localStorage[lsKeys[numKeys[i]]] = value\n      else\n        localStorage.removeItem(lsKeys[numKeys[i]])\n    }\n\n    swal({\n      title: 'Woohoo!',\n      text: 'Configuration saved into this browser.',\n      icon: 'success'\n    }).then(() => {\n      location.reload()\n    })\n  })\n}\n\npage.getPrettyUploadAge = hours => {\n  if (hours === 0) {\n    return 'Permanent'\n  } else if (hours < 1) {\n    const minutes = hours * 60\n    return `${minutes} minute${minutes === 1 ? '' : 's'}`\n  } else if (hours >= 24) {\n    const days = hours / 24\n    return `${days} day${days === 1 ? '' : 's'}`\n  } else {\n    return `${hours} hour${hours === 1 ? '' : 's'}`\n  }\n}\n\n// Handle image paste event\nwindow.addEventListener('paste', event => {\n  const items = (event.clipboardData || event.originalEvent.clipboardData).items\n  const index = Object.keys(items)\n  for (let i = 0; i < index.length; i++) {\n    const item = items[index[i]]\n    if (item.kind === 'file') {\n      const blob = item.getAsFile()\n      const file = new File([blob], `pasted-image.${blob.type.match(/(?:[^/]*\\/)([^;]*)/)[1]}`, {\n        type: blob.type\n      })\n      page.dropzone.addFile(file)\n    }\n  }\n})\n\nwindow.onload = () => {\n  // Global error callback\n  function onFailure (error) {\n    if (error === undefined) return\n    console.error(error)\n\n    // Hide these elements\n    document.querySelector('#albumDiv').classList.add('is-hidden')\n    document.querySelector('#tabs').classList.add('is-hidden')\n    document.querySelectorAll('.tab-content').forEach(element => {\n      return element.classList.add('is-hidden')\n    })\n\n    // Update upload button\n    const uploadButton = document.querySelector('#loginToUpload')\n    uploadButton.innerText = 'An error occurred. Try to reload?'\n    uploadButton.classList.remove('is-loading')\n    uploadButton.classList.remove('is-hidden')\n\n    uploadButton.addEventListener('click', () => {\n      location.reload()\n    })\n\n    // Show alert modal\n    if (error.response) {\n      console.error(error.response)\n      // Better error messages for Cloudflare errors\n      const cloudflareErrors = {\n        520: 'Unknown Error',\n        521: 'Web Server Is Down',\n        522: 'Connection Timed Out',\n        523: 'Origin Is Unreachable',\n        524: 'A Timeout Occurred',\n        525: 'SSL Handshake Failed',\n        526: 'Invalid SSL Certificate',\n        527: 'Railgun Error',\n        530: 'Origin DNS Error'\n      }\n      const statusText = cloudflareErrors[error.response.status] || error.response.statusText\n      const description = error.response.data && error.response.data.description\n        ? error.response.data.description\n        : 'Please check the console for more information.'\n      return swal(`${error.response.status} ${statusText}`, description, 'error')\n    } else {\n      const content = document.createElement('div')\n      content.innerHTML = `<code>${error.toString()}</code>`\n      return swal({\n        title: 'An error occurred!',\n        icon: 'error',\n        content\n      })\n    }\n  }\n\n  page.checkIfPublic(onFailure)\n\n  page.clipboardJS = new ClipboardJS('.clipboard-js')\n\n  page.clipboardJS.on('success', () => {\n    return swal('Copied!', 'The link has been copied to clipboard.', 'success')\n  })\n\n  page.clipboardJS.on('error', onFailure)\n\n  page.lazyLoad = new LazyLoad({\n    elements_selector: '.field.uploads img'\n  })\n\n  document.querySelector('#createAlbum').addEventListener('click', () => {\n    page.createAlbum()\n  })\n}\n"]}