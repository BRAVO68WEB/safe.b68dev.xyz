{"version":3,"sources":["album.js"],"names":["const","lsKeys","page","lazyLoad","lightbox","lightboxExts","window","addEventListener","files","document","querySelectorAll","i","length","sizeElem","querySelector","str","dataset","value","innerHTML","replace","getPrettyBytes","parseInt","dateElem","getPrettyDate","Date","LazyLoad","imageExtsRegex","RegExp","map","ext","substring","join","console","log","SimpleLightbox","captions","captionSelector","captionType","captionsData","captionPosition","captionDelay","fileExt","preloading","uniqueImages"],"mappings":"AAGAA,IAAMC,OAAS,CAAA,EAETC,KAAO,CACXC,SAAU,KACVC,SAAU,KAIVC,aAAc,CAAC,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,SAGpFC,OAAOC,iBAAiB,oBAAkB,WAIxC,IAHAP,IAAMQ,EAAQC,SAASC,iBAAiB,oBAG/BC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACrCX,IAAMa,EAAWL,EAAMG,GAAGG,cAAc,uBACxC,GAAID,EAAU,CACZb,IAAMe,EAAMF,EAASG,QAAQC,OAASJ,EAASK,UAAUC,QAAQ,SAAU,IAC3EN,EAASK,UAAYhB,KAAKkB,eAAeC,SAASN,GACpD,CAEAf,IAAMsB,EAAWd,EAAMG,GAAGG,cAAc,uBACxC,GAAIQ,EAAU,CACZtB,IAAMe,EAAMO,EAASN,QAAQC,MAC7BK,EAASJ,UAAYhB,KAAKqB,cAAc,IAAIC,KAAqB,IAAhBH,SAASN,IAC5D,CACF,CAEAb,KAAKC,SAAW,IAAIsB,SAIpBzB,IAAM0B,EAAiB,IAAIC,OAAO,GAAGzB,KAAKG,aAAauB,KAAG,SAACC,GACzD,OAAOA,EAAIC,UAAU,EACvB,IAAGC,KAAK,KAAQ,KAEhBC,QAAQC,IAAIP,GACZxB,KAAKE,SAAW,IAAI8B,eAAe,iBAAkB,CACnDC,UAAU,EACVC,gBAAiB,MACjBC,YAAa,OACbC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,IACdC,QAASf,EACTgB,YAAY,EACZC,cAAc,GAElB","file":"album.js","sourcesContent":["/* global LazyLoad, SimpleLightbox */\n\n// eslint-disable-next-line no-unused-vars\nconst lsKeys = {}\n\nconst page = {\n  lazyLoad: null,\n  lightbox: null,\n\n  // Array of extensions that will be whitelisted for SimpleLightbox\n  // Should only include image extensions that can be rendered directly on browsers\n  lightboxExts: ['.gif', '.jpeg', '.jpg', '.png', '.svg', '.tif', '.tiff', '.webp', '.bmp']\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const files = document.querySelectorAll('.image-container')\n\n  // Prettify individual file's data rows\n  for (let i = 0; i < files.length; i++) {\n    const sizeElem = files[i].querySelector('.details .file-size')\n    if (sizeElem) {\n      const str = sizeElem.dataset.value || sizeElem.innerHTML.replace(/\\s*B$/i, '')\n      sizeElem.innerHTML = page.getPrettyBytes(parseInt(str))\n    }\n\n    const dateElem = files[i].querySelector('.details .file-date')\n    if (dateElem) {\n      const str = dateElem.dataset.value\n      dateElem.innerHTML = page.getPrettyDate(new Date(parseInt(str) * 1000))\n    }\n  }\n\n  page.lazyLoad = new LazyLoad()\n\n  // Build RegExp out of imageExts array\n  // SimpleLightbox demands RegExp for configuring supported file extensions\n  const imageExtsRegex = new RegExp(`${page.lightboxExts.map(ext => {\n    return ext.substring(1) // removes starting dot\n  }).join('|')}`, 'i')\n\n  console.log(imageExtsRegex)\n  page.lightbox = new SimpleLightbox('#table a.image', {\n    captions: true,\n    captionSelector: 'img',\n    captionType: 'attr',\n    captionsData: 'alt',\n    captionPosition: 'bottom',\n    captionDelay: 500,\n    fileExt: imageExtsRegex,\n    preloading: false,\n    uniqueImages: false\n  })\n})\n"]}