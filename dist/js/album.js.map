{"version":3,"sources":["album.js"],"names":["const","lsKeys","page","lazyLoad","lightbox","lightboxExts","window","addEventListener","sizeElements","document","querySelectorAll","i","length","string","dataset","value","innerHTML","getPrettyBytes","parseInt","dateElements","getPrettyDate","Date","LazyLoad","imageExtsRegex","RegExp","map","ext","substring","join","SimpleLightbox","captions","captionSelector","captionType","captionsData","captionPosition","captionDelay","fileExt","preloading","uniqueImages"],"mappings":"AAGAA,IAAMC,OAAS,CAAA,EAETC,KAAO,CACXC,SAAU,KACVC,SAAU,KAIVC,aAAc,CAAC,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,SAGpFC,OAAOC,iBAAiB,oBAAkB,WAGxC,IADAP,IAAMQ,EAAeC,SAASC,iBAAiB,cACtCC,EAAI,EAAGA,EAAIH,EAAaI,OAAQD,IAAK,CAC5CX,IAAMa,EAASL,EAAaG,GAAGG,QAAQC,OAASP,EAAaG,GAAGK,UAChER,EAAaG,GAAGK,UAAYd,KAAKe,eAAeC,SAASL,EAAQ,IACnE,CAIA,IADAb,IAAMmB,EAAeV,SAASC,iBAAiB,cACtCC,EAAI,EAAGA,EAAIQ,EAAaP,OAAQD,IAAK,CAC5CX,IAAMa,EAASM,EAAaR,GAAGG,QAAQC,MACvCI,EAAaR,GAAGK,UAAYd,KAAKkB,cAAc,IAAIC,KAA4B,IAAvBH,SAASL,EAAQ,KAC3E,CAEAX,KAAKC,SAAW,IAAImB,SAIpBtB,IAAMuB,EAAiB,IAAIC,OAAO,GAAGtB,KAAKG,aAAaoB,KAAG,SAACC,GACzD,OAAOA,EAAIC,UAAU,EACvB,IAAGC,KAAK,KAAQ,KAEhB1B,KAAKE,SAAW,IAAIyB,eAAe,iBAAkB,CACnDC,UAAU,EACVC,gBAAiB,MACjBC,YAAa,OACbC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,IACdC,QAASb,EACTc,YAAY,EACZC,cAAc,GAElB","file":"album.js","sourcesContent":["/* global LazyLoad, SimpleLightbox */\n\n// eslint-disable-next-line no-unused-vars\nconst lsKeys = {}\n\nconst page = {\n  lazyLoad: null,\n  lightbox: null,\n\n  // Array of extensions that will be whitelisted for SimpleLightbox\n  // Should only include image extensions that can be rendered directly on browsers\n  lightboxExts: ['.gif', '.jpeg', '.jpg', '.png', '.svg', '.tif', '.tiff', '.webp', '.bmp']\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // Prettify all .file-size elements\n  const sizeElements = document.querySelectorAll('.file-size')\n  for (let i = 0; i < sizeElements.length; i++) {\n    const string = sizeElements[i].dataset.value || sizeElements[i].innerHTML\n    sizeElements[i].innerHTML = page.getPrettyBytes(parseInt(string, 10))\n  }\n\n  // Prettify all .file-date elements\n  const dateElements = document.querySelectorAll('.file-date')\n  for (let i = 0; i < dateElements.length; i++) {\n    const string = dateElements[i].dataset.value\n    dateElements[i].innerHTML = page.getPrettyDate(new Date(parseInt(string, 10) * 1000))\n  }\n\n  page.lazyLoad = new LazyLoad()\n\n  // Build RegExp out of imageExts array\n  // SimpleLightbox demands RegExp for configuring supported file extensions\n  const imageExtsRegex = new RegExp(`${page.lightboxExts.map(ext => {\n    return ext.substring(1) // removes starting dot\n  }).join('|')}`, 'i')\n\n  page.lightbox = new SimpleLightbox('#table a.image', {\n    captions: true,\n    captionSelector: 'img',\n    captionType: 'attr',\n    captionsData: 'alt',\n    captionPosition: 'bottom',\n    captionDelay: 500,\n    fileExt: imageExtsRegex,\n    preloading: false,\n    uniqueImages: false\n  })\n})\n"]}